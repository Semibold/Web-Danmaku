{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/sharre/parser.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/sharre/constant.ts","webpack:///./src/sharre/utils.ts","webpack:///./src/sharre/binary-tree.ts","webpack:///./src/renderer/base-renderer.ts","webpack:///./src/entity/css-entity.ts","webpack:///./src/entity/base-entity.ts","webpack:///./src/renderer/css-renderer.ts","webpack:///./src/danmaku.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","text","domParser","DOMParser","this","disinfectedText","replace","doc","parseFromString","getSingleNodeStringContent","tagName","node","querySelector","textContent","getSingleNodeNumberContent","Number","getVarietyDanmakuItems","items","nodes","getElementsByTagName","length","pVal","getAttribute","pValSegments","split","item","start","shift","size","color","pubDate","pool","uHash","String","uuid","content","push","parse","detail","chatServer","chatId","mission","maxLimit","source","ds","de","maxCount","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","TypeError","__","constructor","__values","iterator","next","done","__read","e","ar","error","__spreadArray","to","from","il","j","DEF_LINE_HEIGHT","danmakuCompareFn","prev","getMeasuredTextWidth","canvas","font","context","getContext","measureText","width","getHexColor","withSign","hexColor","toString","slice","getOutlineColor","isOrthogonalRectangle","targetGeometricX","x","targetGeometricY","y","height","existGeometricX","existGeometricY","Math","abs","compareFn","entries","bSearchTargetIndex","target","low","mid","hig","floor","index","bSearchInsertionIndex","pIndex","cIndex","bInsert","offset","sIndex","mIndex","eIndex","findInsertionIndex","splice","bRemove","eliminated","bInsertAll","forEach","bRemoveAll","findTargetIndex","removeAllEquivalent","interrupt","indexCounter","keys","map","sort","val","getItemsByPartialRange","end","limit","getItemsByIndexRange","data","config","domElement","document","createElement","timelineRaf","maxStackDepth","prevFrameTimeStamp","fpsSamples","fpsMaxSamples","stackDepthRestrict","compositeFrameInterval","compositeFrameMinPeriod","viewportTree","timelineTree","sharedCanvas","state","paused","currentTime","zIndexLayout","genMaxStackDepth","genStageDetail","samples","total","reduce","cur","max","min","getItemsByTimeRange","prevTime","filter","compositeAll","entities","compositeFramePeriodRestrict","compositedEntities","groups","step","bStart","entity","g","isArray","group","composite","maxPeriod","Infinity","prevLayoutDetailCache","startTime","performance","now","args","getNextCompositeArguments","composited","offsetY","zIndex","calculatedOpenLayers","openLayers","highlight","canvasH","list","layoutTree","tunedOffsetY","getTunedOffsetY","setLayout","exist","isIntersectionRectangle","isExceedingLinearSpeed","diffSpeed","averageLinearSpeed","diffDistance","restTime","coBoundary","ceil","style","display","position","top","left","right","bottom","overflow","transform","whiteSpace","pointerEvents","canvasW","lineHeight","container","parentElement","appendChild","nextTick","currentFrameTimeStamp","elapsed","clockSynchronization","previousTime","time","clock","nextAnimationFrame","timeStamp","refreshRendererDetail","render","requestAnimationFrame","outdated","duration","removeOutdatedEntitiesFromTrees","removedEntities","cleanOutdatedEntities","reproducible","requestDanmakuAnimation","cancelDanmakuAnimation","cancelAnimationFrame","refreshViewportTree","repaintFrame","play","pause","seek","refreshViewport","prevPaused","isNaN","addAll","resize","w","h","oldCanvasW","scalableDuration","search","offsetX","dispose","removeChild","renderer","sharedStyle","keyframeName","prefix","genTextNodeDetail","recalculateStyleReducer","insertKeyframes","outline","initialY","fontFamily","fontWeight","fontSize","userSelect","textShadow","strokeColor","setAttribute","animation","animationPlayState","sheet","cssRules","insertRule","totalMotionDistance","deleteKeyframes","endOffset","rule","type","CSSRule","KEYFRAMES_RULE","deleteRule","willChange","refreshVisibilityStyle","visible","visibility","show","hide","animationDuration","animationDelay","elapsedTime","needRemove","fontScaling","restMotionDistance","fragment","createDocumentFragment","recycledNodes","appendSharedStyle","title","ownerDocument","head","compositedEntity","childNodes","refreshConnectedEntityAnimation","recycledBufferSize","curPaused","input","assign","Danmaku","DEF_CONFIG","rendererType","sharedRenderer","entry","Parser"],"mappings":";CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,G,8GCzDrD,iBAKI,WAAoBC,GAAA,KAAAA,OAHH,KAAAC,UAAY,IAAIC,UAI7BC,KAAKC,gBAAkBD,KAAKH,KAAKK,QAAQ,qCAAsC,IAC/EF,KAAKG,IAAMH,KAAKF,UAAUM,gBAAgBJ,KAAKC,gBAAiB,YA4DxE,OAzDY,YAAAI,2BAAR,SAAmCC,GAC/B,IAAMC,EAAOP,KAAKG,IAAIK,cAAcF,GAEpC,GAAIC,GAA4B,MAApBA,EAAKE,YACb,OAAOF,EAAKE,aAIZ,YAAAC,2BAAR,SAAmCJ,GAC/B,IAAMC,EAAOP,KAAKG,IAAIK,cAAcF,GAEpC,GAAIC,GAAQA,EAAKE,YACb,OAAOE,OAAOJ,EAAKE,cAInB,YAAAG,uBAAR,SAA+BN,GAC3B,IAAMO,EAAwB,GACxBC,EAAQd,KAAKG,IAAIY,qBAAqBT,GAC5C,IAAKQ,EAAO,OAAOD,EACnB,IAAK,IAAIpD,EAAI,EAAGA,EAAIqD,EAAME,OAAQvD,IAAK,CACnC,IAAM8C,EAAOO,EAAMrD,GACbgD,EAAcF,EAAKE,YACzB,GAAKA,EAAL,CACA,IAAMQ,EAAOV,EAAKW,aAAa,KAC/B,GAAKD,EAAL,CACA,IAAME,EAAeF,EAAKG,MAAM,KAChC,KAAID,EAAaH,OAAS,GAA1B,CACA,IAAMK,EAAqB,CACvBC,MAAOX,OAAOQ,EAAaI,SAC3BvC,KAAM2B,OAAOQ,EAAaI,SAC1BC,KAAMb,OAAOQ,EAAaI,SAC1BE,MAAOd,OAAOQ,EAAaI,SAC3BG,QAASf,OAAOQ,EAAaI,SAC7BI,KAAMhB,OAAOQ,EAAaI,SAC1BK,MAAOC,OAAOV,EAAaI,SAC3BO,KAAMD,OAAOV,EAAaI,SAC1BQ,QAAStB,GAEbI,EAAMmB,KAAKX,MAEf,OAAOR,GAGX,YAAAoB,MAAA,WACI,IAAMC,EAA+B,GAUrC,OATAA,EAAOC,WAAanC,KAAKK,2BAA2B,cACpD6B,EAAOE,OAASpC,KAAKK,2BAA2B,UAChD6B,EAAOG,QAAUrC,KAAKK,2BAA2B,WACjD6B,EAAOI,SAAWtC,KAAKU,2BAA2B,YAClDwB,EAAOK,OAASvC,KAAKK,2BAA2B,UAChD6B,EAAOM,GAAKxC,KAAKK,2BAA2B,MAC5C6B,EAAOO,GAAKzC,KAAKK,2BAA2B,MAC5C6B,EAAOQ,SAAW1C,KAAKU,2BAA2B,aAClDwB,EAAOrB,MAAQb,KAAKY,uBAAuB,KACpCsB,GAEf,EAnEA,GCTIS,EAAgB,SAASxE,EAAGyE,GAI5B,OAHAD,EAAgBpE,OAAOsE,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAU5E,EAAGyE,GAAKzE,EAAE2E,UAAYF,IACvE,SAAUzE,EAAGyE,GAAK,IAAK,IAAIjD,KAAKiD,EAAOrE,OAAOkB,UAAUC,eAAe1B,KAAK4E,EAAGjD,KAAIxB,EAAEwB,GAAKiD,EAAEjD,MAC3ExB,EAAGyE;;;;;;;;;;;;;;gFAGrB,SAASI,EAAU7E,EAAGyE,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIK,UAAU,uBAAyBpB,OAAOe,GAAK,iCAE7D,SAASM,IAAOlD,KAAKmD,YAAchF,EADnCwE,EAAcxE,EAAGyE,GAEjBzE,EAAEsB,UAAkB,OAANmD,EAAarE,OAAOY,OAAOyD,IAAMM,EAAGzD,UAAYmD,EAAEnD,UAAW,IAAIyD,GA+EtD3E,OAAOY,OAY7B,SAASiE,EAAS9E,GACrB,IAAIsB,EAAsB,mBAAXhB,QAAyBA,OAAOyE,SAAUpF,EAAI2B,GAAKtB,EAAEsB,GAAInC,EAAI,EAC5E,GAAIQ,EAAG,OAAOA,EAAED,KAAKM,GACrB,GAAIA,GAAyB,iBAAbA,EAAE0C,OAAqB,MAAO,CAC1CsC,KAAM,WAEF,OADIhF,GAAKb,GAAKa,EAAE0C,SAAQ1C,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAEb,KAAM8F,MAAOjF,KAG5C,MAAM,IAAI2E,UAAUrD,EAAI,0BAA4B,mCAGjD,SAAS4D,EAAOlF,EAAGgB,GACtB,IAAIrB,EAAsB,mBAAXW,QAAyBN,EAAEM,OAAOyE,UACjD,IAAKpF,EAAG,OAAOK,EACf,IAAmBK,EAAY8E,EAA3BhG,EAAIQ,EAAED,KAAKM,GAAOoF,EAAK,GAC3B,IACI,WAAc,IAANpE,GAAgBA,KAAM,MAAQX,EAAIlB,EAAE6F,QAAQC,MAAMG,EAAG1B,KAAKrD,EAAEG,OAExE,MAAO6E,GAASF,EAAI,CAAEE,MAAOA,GAC7B,QACI,IACQhF,IAAMA,EAAE4E,OAAStF,EAAIR,EAAU,SAAIQ,EAAED,KAAKP,GAElD,QAAU,GAAIgG,EAAG,MAAMA,EAAEE,OAE7B,OAAOD,EAmBJ,SAASE,EAAcC,EAAIC,GAC9B,IAAK,IAAIrG,EAAI,EAAGsG,EAAKD,EAAK9C,OAAQgD,EAAIH,EAAG7C,OAAQvD,EAAIsG,EAAItG,IAAKuG,IAC1DH,EAAGG,GAAKF,EAAKrG,GACjB,OAAOoG,EAsCctF,OAAOY,OC7MzB,IAAM8E,EAAkB,MCU/B,2BA4CA,OA3CW,EAAAC,iBAAP,SAAwBC,EAAoBb,GACxC,OAAOa,EAAK7C,MAAQgC,EAAKhC,OAGtB,EAAA8C,qBAAP,SACIC,EACAxE,EACAyE,QAAA,IAAAA,MAAA,qDAEA,IAAMC,EAAUF,EAAOG,WAAW,MAClC,OAAID,GACAA,EAAQD,KAAOA,EACRC,EAAQE,YAAY5E,GAAM6E,OAE1B,GAIR,EAAAC,YAAP,SAAmB7F,EAAe8F,QAAA,IAAAA,OAAA,GAC9B,IAAMC,GAAY,SAAW/F,EAAMgG,SAAS,KAAKC,OAAO,GAExD,OAAIH,EACO,IAAMC,EAENA,GAIR,EAAAG,gBAAP,SAAuBlG,GACnB,OAAOA,EAAQ,EAAI,UAGhB,EAAAmG,sBAAP,SAA6BzH,EAAmBoF,GAC5C,IAAMsC,EAAmB1H,EAAE2H,EAAI3H,EAAEkH,MAAQ,EACnCU,EAAmB5H,EAAE6H,EAAI7H,EAAE8H,OAAS,EACpCC,EAAkB3C,EAAEuC,EAAIvC,EAAE8B,MAAQ,EAClCc,EAAkB5C,EAAEyC,EAAIzC,EAAE0C,OAAS,EAEzC,OACIG,KAAKC,IAAIR,EAAmBK,KAAqB/H,EAAEkH,MAAQ9B,EAAE8B,OAAS,GACtEe,KAAKC,IAAIN,EAAmBI,KAAqBhI,EAAE8H,OAAS1C,EAAE0C,QAAU,GAGpF,EA5CA,GCPA,aAII,WAAYK,GAHH,KAAAC,QAAe,GAIpB5F,KAAK2F,UAAYA,EAoPzB,OAjPI,YAAAE,mBAAA,SAAmBC,GAKf,IAJA,IAAIC,EAAM,EACNC,EAAM,EACNC,EAAMjG,KAAK4F,QAAQ5E,OAAS,EAEzB+E,GAAOE,GAAK,CACfD,EAAMP,KAAKS,OAAOH,EAAME,GAAO,GAC/B,IAAME,EAAQnG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQI,IAClD,GAAIG,EAAQ,EACRF,EAAMD,EAAM,MACT,MAAIG,EAAQ,GAGf,OAAOH,EAFPD,EAAMC,EAAM,GAMpB,OAAQ,GAGZ,YAAAI,sBAAA,SAAsBN,GAClB,IAAK9F,KAAK4F,QAAQ5E,OAAQ,OAAO,EACjC,GAAIhB,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQ,KAAO,EAAG,OAAO,EACzD,GAAI5F,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQ5F,KAAK4F,QAAQ5E,OAAS,KAAO,EAAG,OAAOhB,KAAK4F,QAAQ5E,OAM5F,IAJA,IAAI+E,EAAM,EACNC,EAAM,EACNC,EAAMjG,KAAK4F,QAAQ5E,OAAS,EAEzB+E,GAAOE,GAAK,CACfD,EAAMP,KAAKS,OAAOH,EAAME,EAAM,GAAK,GACnC,IAAMI,EAASrG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQI,EAAM,IACnDM,EAAStG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQI,IAEnD,GAAIK,GAAU,GAAKC,GAAU,EACzB,OAAON,EACJ,GAAIK,EAAS,EAChBJ,EAAMD,EAAM,MACT,MAAIK,EAAS,GAEb,CACC,EAGJ,MALAN,EAAMC,EAAM,GASpB,OAAQ,GAGZ,YAAAO,QAAA,SAAQT,EAAWU,G,WAAA,IAAAA,MAAA,GACf,IAAIL,GAAS,EACTM,GAAU,EACVC,GAAU,EACVC,GAAU,EAQd,OANIH,GACCC,GAAD,IAA2BzG,KAAK4G,mBAAmBd,GAAO,IAAnD,GAAEY,EAAM,KAAEC,EAAM,MAEvBF,EAASC,EAASC,EAAS3G,KAAKoG,sBAAsBN,IAGlD,GACJ,KAAKU,EAAS,EACVL,EAAQM,EACR,MACJ,KAAKD,EAAS,EACVL,EAAQQ,EACR,MACJ,QACIR,EAAQO,EAQhB,OAJIP,GAAS,GACTnG,KAAK4F,QAAQiB,OAAOV,EAAO,EAAGL,GAG3B9F,KAAK4F,QAAQ5E,QAGxB,YAAA8F,QAAA,SAAQhB,GACJ,IAAMiB,EAAkB,GAClBZ,EAAQnG,KAAK6F,mBAAmBC,GAMtC,OAJIK,GAAS,GACTY,EAAW/E,KAAI,MAAf+E,EAAU,OAAS/G,KAAK4F,QAAQiB,OAAOV,EAAO,MAG3CY,GAGX,YAAAC,WAAA,SAAWnG,EAAY2F,GAAvB,WAKI,YALmB,IAAAA,MAAA,GACnB3F,EAAMoG,SAAQ,SAAC5F,GACX,EAAKkF,QAAQlF,EAAMmF,MAGhBxG,KAAK4F,QAAQ5E,QAGxB,YAAAkG,WAAA,SAAWrG,GAAX,WACUkG,EAAkB,GAMxB,OAJAlG,EAAMoG,SAAQ,SAAC5F,GACX0F,EAAW/E,KAAI,MAAf+E,EAAU,OAAS,EAAKD,QAAQzF,SAG7B0F,GAGX,YAAAH,mBAAA,SAAmBd,GACf,IAAIY,EAAS1G,KAAKoG,sBAAsBN,GACpCW,EAASC,EACTC,EAASD,EAEb,GAAIA,EAAS,EAAG,MAAO,CAACD,EAAQC,EAAQC,GAExC,KAAOA,EAAS,EAAI3G,KAAK4F,QAAQ5E,QAAQ,CACrC,IAAMqF,EAASrG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQe,IAC7CL,EAAStG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQe,EAAS,IAE5D,KAAIN,GAAU,GAAKC,GAAU,GAGzB,MAFAK,GAAU,EAUlB,IAJIA,EAAS,IAAM3G,KAAK4F,QAAQ5E,QAAUhB,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQ5F,KAAK4F,QAAQ5E,OAAS,KAAO,IACvG2F,EAAS3G,KAAK4F,QAAQ5E,QAGnByF,EAAS,EAAI,GAAKA,EAAS,EAAIzG,KAAK4F,QAAQ5E,QAAQ,CACjDqF,EAASrG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQa,EAAS,IACtDH,EAAStG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQa,EAAS,IAE5D,KAAIJ,GAAU,GAAKC,GAAU,GAGzB,MAFAG,GAAU,EAUlB,OAJe,IAAXA,GAAgBzG,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQ,KAAO,IAC3Da,EAAS,GAGN,CAACA,EAAQC,EAAQC,IAG5B,YAAAQ,gBAAA,SAAgBrB,GACZ,IAAIY,EAAS1G,KAAK6F,mBAAmBC,GACjCW,EAASC,EACTC,EAASD,EAEb,GAAIA,EAAS,EAAG,MAAO,CAACD,EAAQC,EAAQC,GAExC,KAAOA,EAAS,EAAI3G,KAAK4F,QAAQ5E,SACzBhB,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQe,EAAS,KAG7CA,GAAU,EAIlB,KAAOF,EAAS,GAAK,GAAKA,EAAS,EAAIzG,KAAK4F,QAAQ5E,SAC5ChB,KAAK2F,UAAUG,EAAQ9F,KAAK4F,QAAQa,EAAS,KAG7CA,GAAU,EAIlB,MAAO,CAACA,EAAQC,EAAQC,IAG5B,YAAAS,oBAAA,SAAoBvG,EAAYwG,G,QAAhC,YAAgC,IAAAA,OAAA,GAC5B,IAAMN,EAAkB,GAClBO,EAA4C,G,IAElD,IAAmB,QAAAzG,GAAK,8BAAE,CAArB,IAAMQ,EAAI,QACL,IAA2BrB,KAAKmH,gBAAgB9F,GAAK,GAApDoF,EAAM,KAAEC,EAAM,KAAEC,EAAM,KAE7B,KAAID,EAAS,GAEb,IAAK,IAAIjJ,EAAIgJ,EAAQhJ,EAAIkJ,EAAS,IAC1B3G,KAAK4F,QAAQnI,KAAO4D,IACG,MAAnBiG,EAAa7J,GACb6J,EAAa7J,GAAK,EAElB6J,EAAa7J,MAEb4J,IAPyB5J,O,iGA0BzC,OAdAc,OAAOgJ,KAAKD,GACPE,IAAI7G,QACJ8G,MAAK,SAACjK,EAAGoF,GAAM,OAAAA,EAAIpF,KACnByJ,SAAQ,SAAAS,GACLX,EAAW/E,KAAI,MAAf+E,EAAU,OAAS,EAAKnB,QAAQiB,OAAOa,EAAK,SAU7CX,GAGX,YAAAY,uBAAA,SAAuBrG,EAAmBsG,EAAiBC,QAAA,IAAAA,MAAA,KACjD,IAACpB,EAAD,EAAWzG,KAAK4G,mBAAsBtF,GAAM,GAArC,GACNqF,EAAD,EAAW3G,KAAK4G,mBAAsBgB,GAAI,GAAnC,GAEb,OAAO5H,KAAK8H,qBAAqBrB,EAAQE,EAAQkB,IAOrD,YAAAC,qBAAA,SAAqBrB,EAAgBE,EAAgBkB,QAAA,IAAAA,MAAA,KACjD,IAAME,EAAY,GAElB,GAAItB,GAAUE,EAAQ,OAAOoB,EAE7B,KAAOtB,EAASE,GAAQ,CACpB,GAAIF,GAAU,GAAKA,EAASzG,KAAK4F,QAAQ5E,OAAQ,CAC7C,GAAI+G,EAAK/G,QAAU6G,EAAO,MAC1BE,EAAK/F,KAAKhC,KAAK4F,QAAQa,IAE3BA,IAGJ,OAAOsB,GAEf,EAzPA,GCWA,aAgDI,WAA+BC,G,MAAA,KAAAA,SA/CtB,KAAAC,WAAaC,SAASC,cAAc,OAErC,KAAAC,YAAc,EACd,KAAAC,cAAgB,EAChB,KAAAC,mBAA0C,EAC/B,KAAAC,WAAuB,GACvB,KAAAC,cAAgB,EAChB,KAAAC,mBAAqB,KACrB,KAAAC,uBAAyB,GACzB,KAAAC,wBAA0B,EAC1B,KAAAC,aAAe,IAAI,GAAc,SAACzE,EAAMb,GAAS,OAAAa,EAAK9C,KAAKC,MAAQgC,EAAKjC,KAAKC,SAC7E,KAAAuH,aAAe,IAAI,EAAyB,EAAM3E,kBAClD,KAAA4E,aAAeZ,SAASC,cAAc,UACtC,KAAAY,MAAQ,CACvBC,QAAQ,EACRC,YAAa,GAEE,KAAAC,eAAY,MAC3B,GAA2B,GAC3B,KAA2B,GAC3B,KAA2B,GAC3B,KAA2B,G,GA2B3BlJ,KAAKmJ,mBACLnJ,KAAKoJ,iBAoab,OA7bI,sBAAI,kBAAG,C,IAAP,WACI,GAAIpJ,KAAKuI,WAAWvH,OAAQ,CACxB,IAAMqI,EAAUrJ,KAAKuI,WAAWxD,OAAO/E,KAAKwI,eACtCc,EAAQD,EAAQE,QAAO,SAACpF,EAAMqF,GAAQ,OAAArF,EAAOqF,IAAK,GAExD,OAAIH,EAAQrI,OAAS,GACTqI,EAAQrI,OAAS,IAAMsI,EAAQ7D,KAAKgE,IAAG,MAARhE,KAAI,OAAQ4D,KAAW5D,KAAKiE,IAAG,MAARjE,KAAI,OAAQ4D,MAEnE,EAGX,OAAO,G,gCAIf,sBAAI,qBAAM,C,IAAV,WACI,OAAOrJ,KAAK+I,MAAMC,Q,gCAGtB,sBAAI,0BAAW,C,IAAf,WACI,OAAOhJ,KAAK+I,MAAME,a,gCAWZ,YAAAU,oBAAV,SAA8BC,EAAkBX,GAAhD,WACI,OAAOjJ,KAAK6I,aACPlB,uBAAuB,CAAErG,MAAOsI,GAAY,CAAEtI,MAAO2H,IACrDY,QAAO,SAAAxI,GAAQ,SAAK2G,OAAO6B,OAAO7L,KAAK,KAAMqD,OAG5C,YAAAyI,aAAV,SAAuBC,EAAeC,GAAtC,gBAAsC,IAAAA,MAAA,KAClC,IAAMC,EAA0B,GAEhC,IAAKF,EAAS/I,OAAQ,OAAOiJ,EAE7B,IAAMC,EAAyB,GACzBC,EAAOnK,KAAK0I,uBAAyB,IACrC0B,EAAS3E,KAAKiE,IAAG,MAARjE,KAAI,OAAQsE,EAASvC,KAAI,SAAA6C,GAAU,OAAAA,EAAOhJ,KAAKC,YAkB9D,OAhBAyI,EAAS9C,SAAQ,SAAAoD,GACb,IAAMrG,EAAIyB,KAAKS,OAAOmE,EAAOhJ,KAAKC,MAAQ8I,GAAUD,GAC9CG,EAAIJ,EAAOlG,GACbjB,MAAMwH,QAAQD,GACdA,EAAEtI,KAAKqI,GAEPH,EAAOlG,GAAK,CAACqG,MAIrBH,EAAOjD,SAAQ,SAAAuD,GACPA,GAASA,EAAMxJ,QACfiJ,EAAmBjI,KAAI,MAAvBiI,EAAkB,OAAS,EAAKQ,UAAUD,EAAOR,SAIlDC,GAGD,YAAAQ,UAAV,SAAoBV,EAAeC,G,aAAA,IAAAA,MAAA,KAC/B,IAAMU,EAAYjF,KAAKgE,IAAIzJ,KAAK2I,wBAAyBqB,IAAiCW,IACpFV,EAA0B,GAC1BW,EAA4E,GAE5EC,EAAYC,YAAYC,M,IAC9B,IAAqB,QAAAhB,GAAQ,8BAAE,CAA1B,IAAMM,EAAM,QACTrG,EAAI,EACJgH,EAAmC,CAACX,EAAQ,EAAG,GAEnD,GAAIO,EAAsBP,EAAOhJ,KAAKrC,MAAO,CACnC,QAA8B4L,EAAsBP,EAAOhJ,KAAKrC,MAAK,GAC3EgM,EAAO,CAACX,EADW,KAAa,MAIpC,KAAOW,GAAQhH,IAAMhE,KAAKqI,eACtB2C,EAAOhL,KAAKiL,0BAAyB,MAA9BjL,KAAI,OAA8BgL,KAQ7C,GALIX,EAAOa,aACPjB,EAAmBjI,KAAKqI,GACxBO,EAAsBP,EAAOhJ,KAAKrC,MAAQ,CAACqL,EAAOc,QAASd,EAAOe,SAGlEN,YAAYC,MAAQF,EAAYH,EAAW,O,iGAErCI,YAAYC,MAa1B,OAXA/K,KAAK4I,aAAa5B,WAAWiD,GAWtBA,GAGH,YAAAgB,0BAAR,SAAkCZ,EAAWc,EAAiBC,GAE1D,IAAMC,EAAuBrL,KAAKgI,OAAOsD,YAAcjB,EAAOhJ,KAAKkK,UAAY,EAAI,GAEnF,IAAIlB,EAAOa,cACPE,GAAUA,EAASC,GACnBhB,EAAOhF,EAAIgF,EAAO/E,OAAStF,KAAKgI,OAAOwD,SAA3C,CAEA,GAAIL,EAAUd,EAAOhF,EAAI,GAAK8F,EAAUd,EAAOhF,EAAIgF,EAAO/E,OAAStF,KAAKgI,OAAOwD,QAC3E,MAAO,CAACnB,EAAQ,EAAGe,EAAS,GAGhC,IAAMK,EAAwBzL,KAAKkJ,aAAamB,EAAOhJ,KAAKrC,MAE5D,GAAK+D,MAAMwH,QAAQkB,GAAnB,CAEA,KAAOA,EAAKzK,QAAUoK,GAClBK,EAAKzJ,KAAK,IAAI,GAAc,SAACmC,EAAMb,GAAS,OAAAa,EAAKkB,EAAI/B,EAAK+B,MAG9D,IAAMqG,EAA4BD,EAAKL,GACjCO,EAAe3L,KAAK4L,gBAAgBvB,EAAQc,EAASC,GAE3D,GAAIO,EACA,MAAO,CAACtB,EAAQsB,EAAcP,GAE9Bf,EAAOwB,UAAUV,EAASC,GAC1BM,EAAWnF,QAAQ8D,MAInB,YAAAuB,gBAAR,SAAwBvB,EAAWc,EAAiBC,GAMhD,IALA,IACMM,EADwB1L,KAAKkJ,aAAamB,EAAOhJ,KAAKrC,MACrBoM,GAChC3E,EAAD,EAAWiF,EAAW9E,mBAAsB,CAAEvB,EAAGgF,EAAOhF,EAAI8F,IAAU,GAA/D,GAGJ1N,EAFKgJ,EAAS,EAAI,EAAIA,EAEXhJ,EAAIiO,EAAW9F,QAAQ5E,OAAQvD,IAAK,CACpD,IAAMqO,EAAQJ,EAAW9F,QAAQnI,GAEjC,GACIuC,KAAK+L,wBAAwB1B,EAAQyB,EAAOX,IAC5CnL,KAAKgM,uBAAuB3B,EAAQyB,EAAOX,GAE3C,OAAOW,EAAMzG,EAAIyG,EAAMxG,OAAS,EAaxC,OAAO,GAGH,YAAAyG,wBAAR,SAAgCjG,EAAWgG,EAAUX,GACjD,OAAO,EAAMlG,sBACT,CACIE,EAAGW,EAAOX,EACVE,EAAG8F,EAAUrF,EAAOT,EACpBX,MAAOoB,EAAOpB,MACdY,OAAQQ,EAAOR,QAEnB,CACIH,EAAG2G,EAAM3G,EACTE,EAAGyG,EAAMzG,EACTX,MAAOoH,EAAMpH,MACbY,OAAQwG,EAAMxG,UAKlB,YAAA0G,uBAAR,SAA+BlG,EAAWgG,EAAUX,GAgBhD,IAfwB,EAAMlG,sBAC1B,CACIE,EAAG,EACHE,EAAG8F,EAAUrF,EAAOT,EACpBX,MAAO,GACPY,OAAQQ,EAAOR,QAEnB,CACIH,EAAG,EACHE,EAAGyG,EAAMzG,EACTX,MAAO,GACPY,OAAQwG,EAAMxG,SAIA,OAAO,EAE7B,IAAM2G,EAAYnG,EAAOoG,mBAAqBJ,EAAMI,mBAC9CC,EAAe1G,KAAKiE,IAAI5D,EAAOsG,SAAUN,EAAMM,UAAY3G,KAAKC,IAAIuG,GAE1E,OAAIA,EAAY,EACRH,EAAM3G,EAAI2G,EAAMpH,MAAQoB,EAAOX,EACxBgH,EAAerG,EAAOX,GAAK2G,EAAM3G,EAAI2G,EAAMpH,SAEzCoB,EAAOX,EAAIW,EAAOpB,MAAQoH,EAAM3G,GAI7C8G,EAAY,IACRnG,EAAOX,EAAIW,EAAOpB,MAAQoH,EAAM3G,EACzBgH,EAAeL,EAAM3G,GAAKW,EAAOX,EAAIW,EAAOpB,SAE1CoH,EAAM3G,EAAI2G,EAAMpH,MAAQoB,EAAOX,KAO5C,YAAAgE,iBAAR,WAEI,IAAMkD,EAAa5G,KAAK6G,KAAKtM,KAAKgI,OAAOwD,QAAU,KAAO/F,KAAKgE,IAAI,EAAGzJ,KAAKgI,OAAOsD,YAAc,GAChGtL,KAAKqI,cAAgB5C,KAAKiE,IAAI2C,EAAYrM,KAAKyI,qBAAuBzI,KAAKyI,oBAGvE,YAAAW,eAAR,WACIpJ,KAAKiI,WAAWsE,MAAMC,QAAU,QAChCxM,KAAKiI,WAAWsE,MAAME,SAAW,WACjCzM,KAAKiI,WAAWsE,MAAMG,IAAM,KAC5B1M,KAAKiI,WAAWsE,MAAMI,KAAO,MAC7B3M,KAAKiI,WAAWsE,MAAMK,MAAQ,KAC9B5M,KAAKiI,WAAWsE,MAAMM,OAAS,KAC/B7M,KAAKiI,WAAWsE,MAAMO,SAAW,SACjC9M,KAAKiI,WAAWsE,MAAMQ,UAAY,mBAClC/M,KAAKiI,WAAWsE,MAAMS,WAAa,MACnChN,KAAKiI,WAAWsE,MAAMU,cAAgB,OACtCjN,KAAKiI,WAAWsE,MAAM7H,MAAW1E,KAAKgI,OAAOkF,QAAO,KACpDlN,KAAKiI,WAAWsE,MAAMjH,OAAYtF,KAAKgI,OAAOwD,QAAO,KACrDxL,KAAKiI,WAAWsE,MAAMY,WAAalJ,EAAgBa,WAE/C9E,KAAKgI,OAAOoF,YAAcpN,KAAKiI,WAAWoF,eAC1CrN,KAAKgI,OAAOoF,UAAUE,YAAYtN,KAAKiI,aAOvC,YAAAsF,SAAR,WACI,IAAMC,EAAwB1C,YAAYC,MACpC0C,GAAWD,EAAwBxN,KAAKsI,oBAAsB,IAC9DsB,EAAW5J,KAAK+I,MAAME,YAM5B,IAJAjJ,KAAK+I,MAAME,YAAcjJ,KAAK0N,qBAAqB9D,EAAU6D,GAC7DzN,KAAKsI,mBAAqBkF,EAC1BxN,KAAKuI,WAAWvG,KAAKyL,GAEdzN,KAAKuI,WAAWvH,OAAShB,KAAKwI,eACjCxI,KAAKuI,WAAWhH,QAGpB,OAAOkM,GAGH,YAAAC,qBAAR,SAA6BC,EAAmCF,GAC5D,IAAMG,GAAQ5N,KAAKgI,OAAO6F,MAAM7P,KAAK,KAAM2P,EAAcF,IAAY,EAErE,OAAIG,GAAQ,GAAKA,EAAOjD,IACbiD,EAEAD,GAIP,YAAAG,mBAAR,SAA2BC,GAIvB,IAAMJ,EAAe3N,KAAK+I,MAAME,YAEhCjJ,KAAKuN,WACLvN,KAAKgO,wBACLhO,KAAKiO,OAAON,EAAc3N,KAAK+I,MAAME,aACrCjJ,KAAKoI,YAAc8F,sBAAsBlO,KAAK8N,mBAAmBzO,KAAKW,QAGlE,YAAAgO,sBAAR,W,QAEUG,EAAgB,G,IAEtB,IAAqB,QAAAnO,KAAK4I,aAAahD,SAAO,8BAAE,CAA3C,IAAMyE,EAAM,QACb,KAAIA,EAAOhJ,KAAKC,MAAQ+I,EAAO+D,SAJrB,IAIwCpO,KAAK+I,MAAME,aAGzD,MAFAkF,EAASnM,KAAKqI,I,iGAMtBrK,KAAKqO,gCAAgCF,IAGjC,YAAAE,gCAAR,SAAwCF,GAAxC,WACI,GAAIA,EAASnN,OAAQ,CACjBmN,EAASlH,SAAQ,SAAAoD,GACb,IAAMoB,EAAwB,EAAKvC,aAAamB,EAAOhJ,KAAKrC,MACxDyM,GAAQA,EAAKpB,EAAOe,SACpBK,EAAKpB,EAAOe,QAAQhE,oBAAoB,CAACiD,IAAS,MAI1D,IAAMiE,EAAkBtO,KAAK4I,aAAaxB,oBAAoB+G,GAAU,GAIxE,GAFAnO,KAAKuO,sBAAsBD,IAEtBtO,KAAKgI,OAAOwG,aAAc,CAC3B,IAAM3N,EAAQsN,EAAS3G,KAAI,SAAA6C,GAAU,OAAAA,EAAOhJ,QAC5CrB,KAAK6I,aAAazB,oBAAoBvG,GAAO,MAKjD,YAAA4N,wBAAR,WACSzO,KAAKoI,cACNpI,KAAKsI,mBAAqBtI,KAAKsI,oBAAsBwC,YAAYC,MACjE/K,KAAKoI,YAAc8F,sBAAsBlO,KAAK8N,mBAAmBzO,KAAKW,OACtEA,KAAK+I,MAAMC,QAAS,IAIpB,YAAA0F,uBAAR,WACQ1O,KAAKoI,cACLuG,qBAAqB3O,KAAKoI,aAC1BpI,KAAKuN,WACLvN,KAAKsI,mBAAqB,EAC1BtI,KAAKoI,YAAc,EACnBpI,KAAK+I,MAAMC,QAAS,IAIpB,YAAA4F,oBAAR,SAA4B3F,GAClB,IAACxC,EAAD,EAAWzG,KAAK6I,aAAajC,mBAAiC,CAAEtF,MAAO2H,IAAc,GAA9E,GAEb,GAAIxC,EAAS,EAAG,CAGZ,IAFA,IAAImD,EAAW,KAENnM,EAAIgJ,EAAS,EAAGhJ,GAAK,EAAGA,IAAK,CAClC,IAAM4D,EAAOrB,KAAK6I,aAAajD,QAAQnI,GACvC,KAAI4D,EAAKC,MAAQ2H,GAAe5H,EAAKC,MAAQtB,KAAKgI,OAAOoG,UAAYnF,GAGjE,MAFAW,EAAWvI,EAAKC,MAMR,MAAZsI,IACA5J,KAAKiO,OAAOrE,EAAUX,GACtBjJ,KAAK4I,aAAahD,QAAQqB,SAAQ,SAAAoD,GAAU,OAAAA,EAAOwE,qBAK/D,YAAAC,KAAA,WACS9O,KAAKoI,aACNpI,KAAKyO,2BAIb,YAAAM,MAAA,WACQ/O,KAAKoI,aACLpI,KAAK0O,0BAOb,YAAAM,KAAA,SAAKnL,EAAYoL,GACb,IAAMrB,EAAOjN,OAAOkD,GACdqL,EAAalP,KAAKgJ,OAEpB4E,IAAS5N,KAAKiJ,aAAe2E,GAAQ,GAAKA,EAAOjD,MAAawE,MAAMvB,KACpE5N,KAAK+O,QACL/O,KAAKqO,gCAAgCrO,KAAK4I,aAAahD,QAAQb,MAAM,IACrE/E,KAAK+I,MAAME,YAAc2E,EACrBqB,GACAjP,KAAK4O,oBAAoBhB,GAE7BsB,EAAalP,KAAK+O,QAAU/O,KAAK8O,SAIzC,YAAAM,OAAA,SAAOvO,GACHb,KAAK6I,aAAa7B,WAAWnG,IAGjC,YAAAwO,OAAA,SAAOC,EAAWC,GACd,GAAID,EAAI,GAAKC,EAAI,EAAG,CAChB,IAAMC,EAAaxP,KAAKgI,OAAOkF,QAE3BoC,IACAtP,KAAKgI,OAAOkF,QAAUoC,EAClBtP,KAAKgI,OAAOyH,mBACZzP,KAAKgI,OAAOoG,SAAYkB,EAAIE,EAAcxP,KAAKgI,OAAOoG,WAG1DmB,IACAvP,KAAKgI,OAAOwD,QAAU+D,GAE1BvP,KAAKmJ,mBACLnJ,KAAKoJ,iBACLpJ,KAAK4I,aAAahD,QAAQqB,SAAQ,SAAAoD,GAAU,OAAAA,EAAOgF,cAI3D,YAAAK,OAAA,SAAOC,EAAiBxE,GACpB,OAAOnL,KAAK4I,aAAahD,QAAQiE,QAAO,SAAAQ,GACpC,OAAO,EAAMpF,sBACT,CACIE,EAAGwK,EACHtK,EAAG8F,EACHzG,MAAO,EACPY,OAAQ,GAEZ,CACIH,EAAGkF,EAAOlF,EACVE,EAAGgF,EAAOhF,EACVX,MAAO2F,EAAO3F,MACdY,OAAQ+E,EAAO/E,aAM/B,YAAAsK,QAAA,WACI5P,KAAK0O,yBAED1O,KAAKiI,WAAWoF,eAChBrN,KAAKiI,WAAWoF,cAAcwC,YAAY7P,KAAKiI,aAG3D,EAtdA,GCRA,cAGI,WACI6H,EACAzO,EACAyH,EACSiH,EACAxP,QAAA,IAAAA,MAAwB2H,SAASC,cAAc,SAL5D,MAOI,YAAM2H,EAAUzO,EAAMyH,IAAa,K,OAH1B,EAAAiH,cACA,EAAAxP,OAGT,EAAKyP,aAAkB,EAAKhI,OAAOiI,OAAM,aAAa,EAAK5O,KAAKS,K,EAiLxE,OA5L+B,OAc3B,YAAAoO,kBAAA,WACI,GAAIlQ,KAAKkL,WAAY,CASjB,OARAlL,KAAKmQ,yBAAwB,GAC7BnQ,KAAKoQ,kBACLpQ,KAAKO,KAAKgM,MAAMI,KAAO,GACvB3M,KAAKO,KAAKgM,MAAMG,IAAM,GACtB1M,KAAKO,KAAKgM,MAAMK,MAAQ,GACxB5M,KAAKO,KAAKgM,MAAMM,OAAS,GACzB7M,KAAKO,KAAKgM,MAAM8D,QAAU,GAElBrQ,KAAKqB,KAAKrC,MACd,KAAK,EACDgB,KAAKO,KAAKgM,MAAMG,IAAS1M,KAAKsQ,SAAQ,KACtCtQ,KAAKO,KAAKgM,MAAMI,KAAO,MACvB3M,KAAKO,KAAKgM,MAAMQ,UAAY,mBAC5B,MACJ,KAAK,EACD/M,KAAKO,KAAKgM,MAAMM,OAAY7M,KAAKsQ,SAAQ,KACzCtQ,KAAKO,KAAKgM,MAAMI,KAAO,MACvB3M,KAAKO,KAAKgM,MAAMQ,UAAY,mBAC5B,MACJ,KAAK,EACD/M,KAAKO,KAAKgM,MAAMG,IAAS1M,KAAKsQ,SAAQ,KACtCtQ,KAAKO,KAAKgM,MAAMK,MAAQ,eAAe5M,KAAK2P,QAAO,MACnD3P,KAAKO,KAAKgM,MAAMQ,UAAY,kBAC5B,MACJ,KAAK,EACL,QACI/M,KAAKO,KAAKgM,MAAMG,IAAS1M,KAAKsQ,SAAQ,KACtCtQ,KAAKO,KAAKgM,MAAMI,KAAO,eAAe3M,KAAK2P,QAAO,MAClD3P,KAAKO,KAAKgM,MAAMQ,UAAY,kBAIhC/M,KAAKqB,KAAKkK,YACVvL,KAAKO,KAAKgM,MAAM8D,QAAU,aAAa,EAAM1L,YJtD5B,UIyDrB3E,KAAKO,KAAKgM,MAAMgE,WAAavQ,KAAKgI,OAAOuI,WACzCvQ,KAAKO,KAAKgM,MAAMiE,WAAaxQ,KAAKgI,OAAOwI,WACzCxQ,KAAKO,KAAKE,YAAcT,KAAKqB,KAAKU,QAClC/B,KAAKO,KAAKgM,MAAME,SAAW,WAC3BzM,KAAKO,KAAKgM,MAAMkE,SAAczQ,KAAKyQ,SAAQ,KAC3CzQ,KAAKO,KAAKgM,MAAM9K,MAAQ,EAAMkD,YAAY3E,KAAKqB,KAAKI,OACpDzB,KAAKO,KAAKgM,MAAMmE,WAAa,OAC7B1Q,KAAKO,KAAKgM,MAAMoE,WAAa,eAAe3Q,KAAK4Q,YAAW,6DAChB5Q,KAAK4Q,YAAW,6DACf5Q,KAAK4Q,YAAW,8DAChB5Q,KAAK4Q,YAClD5Q,KAAKO,KAAKgM,MAAMnB,OAASpL,KAAKoL,OAAOtG,WACrC9E,KAAKO,KAAKsQ,aAAa,YAAa7Q,KAAKqB,KAAKS,MAC9C9B,KAAKO,KAAKsQ,aAAa,YAAa7Q,KAAKqB,KAAKrC,KAAK8F,YACnD9E,KAAKO,KAAKgM,MAAMuE,UAAe9Q,KAAKgQ,aAAY,IAAIhQ,KAAKoO,SAAQ,gCACjEpO,KAAKO,KAAKgM,MAAMwE,mBAAqB,SACrC/Q,KAAKO,KAAKgM,MAAMC,QAAU,iBAI1B,YAAA4D,gBAAR,WACI,GAAIpQ,KAAK+P,YAAYiB,MAAO,CACxB,IAAMA,EAAuBhR,KAAK+P,YAAYiB,MACxC7K,EAAQ6K,EAAMC,SAASjQ,OAE7B,OAAQhB,KAAKqB,KAAKrC,MACd,KAAK,EACL,KAAK,EACD,MACJ,KAAK,EACDgS,EAAME,WACF,wCACalR,KAAKgQ,aAAY,+NAKEhQ,KAAKmR,oBAAmB,uFAIxDhL,GAEJ,MACJ,KAAK,EACL,QACI6K,EAAME,WACF,wCACalR,KAAKgQ,aAAY,gOAKGhQ,KAAKmR,oBAAmB,uFAIzDhL,MAOZ,YAAAiL,gBAAR,SAAwBC,GACpB,QADoB,IAAAA,MAAA,GAChBrR,KAAK+P,YAAYiB,MAIjB,IAHA,IAAMA,EAAuBhR,KAAK+P,YAAYiB,MACxC,EAASvL,KAAKiE,IAAIsH,EAAMC,SAASjQ,OAASqQ,EAAWL,EAAMC,SAASjQ,QAEjEvD,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC7B,IAAM6T,EAAyBN,EAAMC,SAASxT,GAC9C,GAAI6T,EAAKC,OAASC,QAAQC,gBAAkBH,EAAKlT,OAAS4B,KAAKgQ,aAAc,CACzEgB,EAAMU,WAAWjU,GACjB,SAMR,YAAA0S,wBAAR,SAAgCzI,GAC5B,OAAQ1H,KAAKqB,KAAKrC,MACd,KAAK,EACL,KAAK,EACD,MACJ,KAAK,EACL,KAAK,EACL,QACIgB,KAAKO,KAAKgM,MAAMoF,WAAajK,EAAM,YAAc,KAKrD,YAAAkK,uBAAR,SAA+BC,GAC3B7R,KAAK+I,MAAM8I,QAAUA,EACrB7R,KAAKO,KAAKgM,MAAMuF,WAAa9R,KAAK+I,MAAM8I,QAAU,GAAK,UAG3D,YAAAE,KAAA,WACI/R,KAAK4R,wBAAuB,IAGhC,YAAAI,KAAA,WACIhS,KAAK4R,wBAAuB,IAGhC,YAAA9C,KAAA,WACI,YAAMA,KAAI,WACV9O,KAAKO,KAAKgM,MAAMwE,mBAAqB,WAGzC,YAAAhC,MAAA,WACI,YAAMA,MAAK,WACX/O,KAAKO,KAAKgM,MAAMwE,mBAAqB,UAGzC,YAAA1B,OAAA,WACIrP,KAAKoQ,kBACLpQ,KAAKoR,iBAAiB,GACtBpR,KAAKO,KAAKgM,MAAM0F,kBAAuBjS,KAAKoO,SAAQ,KAGxD,YAAAS,aAAA,WACI7O,KAAKO,KAAKgM,MAAM2F,eAAiB,IAAIlS,KAAKmS,YAAW,KAGzD,YAAAvC,QAAA,SAAQwC,GACAA,EACIpS,KAAKO,KAAK8M,eACVrN,KAAKO,KAAK8M,cAAcwC,YAAY7P,KAAKO,OAG7CP,KAAKO,KAAKgM,MAAMC,QAAU,OAC1BxM,KAAKmQ,yBAAwB,IAEjCnQ,KAAKoR,mBAEb,EA5LA,CCCA,WA6GI,WACatB,EACAzO,EACAyH,GAFA,KAAAgH,WACA,KAAAzO,OACA,KAAAyH,eA1GM,KAAAC,MAAQ,CACvBqC,OAAQ,EACRuE,QAAS,EACTxE,QAAS,EACTnC,QAAQ,EACR6I,SAAS,EACT3G,YAAY,GAsGZlL,KAAKgI,OAAShI,KAAK8P,SAAS9H,OAC5BhI,KAAK4Q,YAAc,EAAMjM,YAAY,EAAMK,gBAAgBhF,KAAKqB,KAAKI,QACrEzB,KAAK0E,MAAQ,EAAMN,qBACfpE,KAAK8I,aACLzH,EAAKU,QACF/B,KAAKgI,OAAOwI,WAAU,IAAIxQ,KAAKyQ,SAAQ,MAAvCzQ,SAAgEA,KAAKgI,OAAOuI,YAEnFvQ,KAAKsF,OACD,EAAMlB,qBACFpE,KAAK8I,aACL,IACG9I,KAAKgI,OAAOwI,WAAU,IAAIxQ,KAAKyQ,SAAQ,MAAvCzQ,SAAgEA,KAAKgI,OAAOuI,YAC/EtM,EA6BhB,OAxII,sBAAI,qBAAM,C,IAAV,WACI,OAAOjE,KAAK+I,MAAMC,Q,gCAGtB,sBAAI,yBAAU,C,IAAd,WACI,OAAOhJ,KAAK+I,MAAMmC,Y,gCAGtB,sBAAI,sBAAO,C,IAAX,WACI,OAAOlL,KAAK+I,MAAM8I,S,gCAGtB,sBAAI,qBAAM,C,IAAV,WACI,OAAO7R,KAAK+I,MAAMqC,Q,gCAGtB,sBAAI,uBAAQ,C,IAAZ,WACI,OAAO3F,KAAKS,MAAMlG,KAAKqB,KAAKG,KAAOxB,KAAKgI,OAAOqK,c,gCAGnD,sBAAI,0BAAW,C,IAAf,WACI,IAAMF,EAAcnS,KAAK8P,SAAS7G,YAAcjJ,KAAKqB,KAAKC,MAC1D,OAAOmE,KAAKiE,IAAIjE,KAAKgE,IAAI,EAAG0I,GAAcnS,KAAKoO,W,gCAGnD,sBAAI,uBAAQ,C,IAAZ,WACI,IAAMhC,EAAWpM,KAAKoO,SAAWpO,KAAKmS,YACtC,OAAO1M,KAAKiE,IAAIjE,KAAKgE,IAAI,EAAG2C,GAAWpM,KAAKoO,W,gCAGhD,sBAAI,uBAAQ,C,IAAZ,WACI,OAAOpO,KAAKgI,OAAOoG,U,gCAGvB,sBAAI,kCAAmB,C,IAAvB,WACI,OAAOpO,KAAKgI,OAAOkF,QAAUlN,KAAK0E,MAAQ1E,KAAK+I,MAAM4G,S,gCAGzD,sBAAI,oCAAqB,C,IAAzB,WACI,OAAQ3P,KAAKmS,YAAcnS,KAAKoO,SAAYpO,KAAKmR,qB,gCAGrD,sBAAI,iCAAkB,C,IAAtB,WACI,OAAQnR,KAAKoM,SAAWpM,KAAKoO,SAAYpO,KAAKmR,qB,gCAGlD,sBAAI,iCAAkB,C,IAAtB,WACI,OAAOnR,KAAKmR,oBAAsBnR,KAAKoO,U,gCAG3C,sBAAI,gBAAC,C,IAAL,WACI,OAAQpO,KAAKqB,KAAKrC,MACd,KAAK,EACL,KAAK,EACD,OAAQgB,KAAKgI,OAAOkF,QAAUlN,KAAK0E,OAAS,EAChD,KAAK,EACL,KAAK,EACL,QACI,OAAO1E,KAAKsS,mBAAqBtS,KAAK0E,Q,gCAIlD,sBAAI,gBAAC,C,IAAL,WACI,OAAO1E,KAAK+I,MAAMoC,S,gCAGtB,sBAAI,sBAAO,C,IAAX,WACI,OAAOnL,KAAK+I,MAAM4G,S,gCAGtB,sBAAI,sBAAO,C,IAAX,WACI,OAAO3P,KAAK+I,MAAMoC,S,gCAGtB,sBAAI,uBAAQ,C,IAAZ,WACI,OAAQnL,KAAKqB,KAAKrC,MACd,KAAK,EACL,KAAK,EACD,OAAQgB,KAAKgI,OAAOkF,QAAUlN,KAAK0E,OAAS,EAChD,KAAK,EACL,KAAK,EACL,QACI,OAAO1E,KAAKgI,OAAOkF,QAAUlN,KAAK+I,MAAM4G,U,gCAIpD,sBAAI,uBAAQ,C,IAAZ,WACI,OAAO3P,KAAK+I,MAAMoC,S,gCA8BtB,YAAA2D,KAAA,WACI9O,KAAK+I,MAAMC,QAAS,GAGxB,YAAA+F,MAAA,WACI/O,KAAK+I,MAAMC,QAAS,GAGxB,YAAA6C,UAAA,SAAUV,EAAiBC,GACvB,OAAIpL,KAAK+I,MAAMmC,aAGXlL,KAAK+I,MAAMoC,QAAUA,EACrBnL,KAAK+I,MAAMqC,OAASA,EACpBpL,KAAK+I,MAAMmC,YAAa,EACxBlL,KAAKkQ,qBACE,IAGnB,EA3JA,ICHA,cAKI,WAAYlI,GAAZ,MACI,YAAMA,IAAO,K,OALR,EAAAuK,SAAWrK,SAASsK,yBACpB,EAAAzC,YAAc7H,SAASC,cAAc,SACrC,EAAAsK,cAAmC,GAIxC,EAAKC,oB,EAuEb,OA9EiC,OAUrB,YAAAA,kBAAR,WACI1S,KAAK+P,YAAYc,aAAa,YAAgB7Q,KAAKgI,OAAOiI,OAAM,cAChEjQ,KAAK+P,YAAY4C,MAAQ,+CACrB3S,KAAKiI,WAAW2K,eAAiB5S,KAAKiI,WAAW2K,cAAcC,OAAS7S,KAAK+P,YAAY1C,eACzFrN,KAAKiI,WAAW2K,cAAcC,KAAKvF,YAAYtN,KAAK+P,cAIlD,YAAA9B,OAAV,SAAiBrE,EAAkBX,GAAnC,WAEUc,EADQ/J,KAAK2J,oBAAoBC,EAAUX,GAC1BzB,KAAI,SAAA3G,GACvB,OAAO,IAAI,EAAU,EAAMA,EAAO,EAAKiI,aAAc,EAAKiH,YAAa,EAAK0C,cAAclR,YAExF0I,EAAqBjK,KAAK8J,aAAaC,GAEzCE,EAAmBjJ,SACnBiJ,EAAmBhD,SAAQ,SAAA6L,GAClBA,EAAiBvS,KAAK8M,eACvB,EAAKkF,SAASjF,YAAYwF,EAAiBvS,SAI/CP,KAAKuS,SAASQ,WAAW/R,QACzBhB,KAAKiI,WAAWqF,YAAYtN,KAAKuS,UAGrCvS,KAAKgT,gCAAgC/I,KAInC,YAAAsE,sBAAV,SAAgCD,G,YAC5B,IAAqB,QAAAA,GAAe,8BAAE,CAAjC,IAAMjE,EAAM,QACTrK,KAAKyS,cAAczR,OAAShB,KAAKgI,OAAOiL,oBACxCjT,KAAKyS,cAAczQ,KAAKqI,EAAO9J,MAC/B8J,EAAOuF,WAEPvF,EAAOuF,SAAQ,I,mGAKnB,YAAAoD,gCAAR,SAAwCjJ,GACpC,IAAMmJ,EAAYlT,KAAKgJ,QACAe,GAAY/J,KAAK4I,aAAahD,SACtCqB,SAAQ,SAAAoD,GAAU,OAAC6I,EAAY7I,EAAO0E,QAAU1E,EAAOyE,WAG1E,YAAAA,KAAA,WACQ9O,KAAKgJ,SACL,YAAM8F,KAAI,WACV9O,KAAKgT,oCAIb,YAAAjE,MAAA,WACS/O,KAAKgJ,SACN,YAAM+F,MAAK,WACX/O,KAAKgT,oCAIb,YAAApD,QAAA,WACI,YAAMA,QAAO,WACb5P,KAAKyS,cAAczR,OAAS,EACxBhB,KAAK+P,YAAY1C,eACjBrN,KAAK+P,YAAY1C,cAAcwC,YAAY7P,KAAK+P,cAG5D,EA9EA,CAAiC,GCsCjC,aAkCI,WAAqBoD,GAAA,KAAAA,QACjBnT,KAAKgI,OAASzJ,OAAO6U,OAAOC,EAAQC,WAAYtT,KAAKmT,OACrDnT,KAAKgI,OAAOuL,aAAe,EAC3BvT,KAAKwT,eAAiB,IAAI,EAAYxT,KAAKgI,QAEvChI,KAAKgI,OAAO9F,OAAOrB,OACnBb,KAAKwT,eAAepE,OAAOpP,KAAKgI,OAAO9F,OAAOrB,MAAMgJ,QAAO,SAAAxI,GAAQ,OAAc,IAAdA,EAAKrC,SAepF,OAtDI,sBAAW,eAAU,C,IAArB,WACI,MAAO,CACHoP,SAAU,EACV9C,WAAY,EACZ2E,OAAQ,UACRM,WAAY,qBACZC,WAAY,MACZ6B,YAAa,EACb7D,cAAc,EACdiB,kBAAkB,EAClBvN,OAAQ,CAAEI,SAAU,KACpBiR,aAAc,EACdN,mBAAoB,IACpBpF,MAAO,SAACF,EAAcF,GAAY,OAAAE,EAAeF,GACjD5D,OAAQ,SAAA4J,GAAS,Y,gCAIzB,sBAAW,WAAM,C,IAAjB,WACI,OAAOC,G,gCAMX,sBAAI,qBAAM,C,IAAV,WACI,OAAO1T,KAAKwT,eAAexK,Q,gCAG/B,sBAAI,yBAAU,C,IAAd,WACI,OAAOhJ,KAAKwT,eAAevL,Y,gCAa/B,YAAA6G,KAAA,WACI9O,KAAKwT,eAAe1E,QAGxB,YAAAC,MAAA,WACI/O,KAAKwT,eAAezE,SAGxB,YAAAM,OAAA,SAAOC,EAAWC,GACdvP,KAAKwT,eAAenE,OAAOC,EAAGC,IAEtC,EAvDA","file":"web-danmaku.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export interface IDanmakuItem {\n    start: number;\n    mode: number;\n    size: number;\n    color: number;\n    pubDate: number;\n    pool: number;\n    uHash: string;\n    uuid: string;\n    content: string;\n    highlight?: boolean;\n}\n\nexport interface IParsedDanmakuDetail {\n    chatId?: string;\n    source?: string;\n    mission?: string;\n    chatServer?: string;\n    ds?: string;\n    de?: string;\n    maxLimit?: number;\n    maxCount?: number;\n    items?: IDanmakuItem[];\n}\n\nexport class Parser {\n    private readonly doc: Document;\n    private readonly domParser = new DOMParser();\n    private readonly disinfectedText: string;\n\n    constructor(private text: string) {\n        this.disinfectedText = this.text.replace(/[\\x00-\\x08\\x0b-\\x0c\\x0e-\\x1f\\x7f]/g, \"\");\n        this.doc = this.domParser.parseFromString(this.disinfectedText, \"text/xml\");\n    }\n\n    private getSingleNodeStringContent(tagName: string) {\n        const node = this.doc.querySelector(tagName);\n\n        if (node && node.textContent != null) {\n            return node.textContent;\n        }\n    }\n\n    private getSingleNodeNumberContent(tagName: string) {\n        const node = this.doc.querySelector(tagName);\n\n        if (node && node.textContent) {\n            return Number(node.textContent);\n        }\n    }\n\n    private getVarietyDanmakuItems(tagName: string): IDanmakuItem[] {\n        const items: IDanmakuItem[] = [];\n        const nodes = this.doc.getElementsByTagName(tagName);\n        if (!nodes) return items;\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const textContent = node.textContent;\n            if (!textContent) continue;\n            const pVal = node.getAttribute(\"p\");\n            if (!pVal) continue;\n            const pValSegments = pVal.split(\",\");\n            if (pValSegments.length < 8) continue;\n            const item: IDanmakuItem = {\n                start: Number(pValSegments.shift()),\n                mode: Number(pValSegments.shift()),\n                size: Number(pValSegments.shift()),\n                color: Number(pValSegments.shift()),\n                pubDate: Number(pValSegments.shift()),\n                pool: Number(pValSegments.shift()),\n                uHash: String(pValSegments.shift()),\n                uuid: String(pValSegments.shift()),\n                content: textContent,\n            };\n            items.push(item);\n        }\n        return items;\n    }\n\n    parse() {\n        const detail: IParsedDanmakuDetail = {};\n        detail.chatServer = this.getSingleNodeStringContent(\"chatserver\");\n        detail.chatId = this.getSingleNodeStringContent(\"chatid\");\n        detail.mission = this.getSingleNodeStringContent(\"mission\");\n        detail.maxLimit = this.getSingleNodeNumberContent(\"maxlimit\");\n        detail.source = this.getSingleNodeStringContent(\"source\");\n        detail.ds = this.getSingleNodeStringContent(\"ds\");\n        detail.de = this.getSingleNodeStringContent(\"de\");\n        detail.maxCount = this.getSingleNodeNumberContent(\"max_count\");\n        detail.items = this.getVarietyDanmakuItems(\"d\");\n        return detail;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const DEF_LINE_HEIGHT = 1.125;\nexport const DEF_OUTLINE_COLOR = 0x66ffff;\n\nexport const enum DanmakuMode {\n    Unknown = 0,\n    RightToLeft = 1,\n    BottomToTop = 4,\n    TopToBottom = 5,\n    LeftToRight = 6,\n}\n\nexport const enum RendererType {\n    CSS,\n    Canvas,\n}\n","import { DEF_LINE_HEIGHT } from \"./constant\";\nimport { IDanmakuItem } from \"./parser\";\n\ninterface IRectangleRect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\nexport class Utils {\n    static danmakuCompareFn(prev: IDanmakuItem, next: IDanmakuItem): number {\n        return prev.start - next.start;\n    }\n\n    static getMeasuredTextWidth(\n        canvas: HTMLCanvasElement,\n        text: string,\n        font: string = `normal normal normal normal 1rem/${DEF_LINE_HEIGHT} sans-serif`,\n    ) {\n        const context = canvas.getContext(\"2d\");\n        if (context) {\n            context.font = font;\n            return context.measureText(text).width;\n        } else {\n            return 0;\n        }\n    }\n\n    static getHexColor(value: number, withSign: boolean = true): string {\n        const hexColor = (\"000000\" + value.toString(16)).slice(-6);\n\n        if (withSign) {\n            return \"#\" + hexColor;\n        } else {\n            return hexColor;\n        }\n    }\n\n    static getOutlineColor(value: number): number {\n        return value ? 0 : 0xffffff;\n    }\n\n    static isOrthogonalRectangle(a: IRectangleRect, b: IRectangleRect): boolean {\n        const targetGeometricX = a.x + a.width / 2;\n        const targetGeometricY = a.y + a.height / 2;\n        const existGeometricX = b.x + b.width / 2;\n        const existGeometricY = b.y + b.height / 2;\n\n        return (\n            Math.abs(targetGeometricX - existGeometricX) <= (a.width + b.width) / 2 &&\n            Math.abs(targetGeometricY - existGeometricY) <= (a.height + b.height) / 2\n        );\n    }\n}\n","/**\n * @desc The method that name start with `b`, which has to do with algorithms.\n */\nexport class BinaryTree<T> {\n    readonly entries: T[] = [];\n    readonly compareFn: (target: T, element: T) => number;\n\n    constructor(compareFn: (target: T, element: T) => number) {\n        this.compareFn = compareFn;\n    }\n\n    bSearchTargetIndex(target: T): number {\n        let low = 0;\n        let mid = 0;\n        let hig = this.entries.length - 1;\n\n        while (low <= hig) {\n            mid = Math.floor((low + hig) / 2);\n            const index = this.compareFn(target, this.entries[mid]);\n            if (index < 0) {\n                hig = mid - 1;\n            } else if (index > 0) {\n                low = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n\n        return -1;\n    }\n\n    bSearchInsertionIndex(target: T): number {\n        if (!this.entries.length) return 0;\n        if (this.compareFn(target, this.entries[0]) <= 0) return 0;\n        if (this.compareFn(target, this.entries[this.entries.length - 1]) >= 0) return this.entries.length;\n\n        let low = 0;\n        let mid = 0;\n        let hig = this.entries.length - 1;\n\n        while (low <= hig) {\n            mid = Math.floor((low + hig + 1) / 2);\n            const pIndex = this.compareFn(target, this.entries[mid - 1]);\n            const cIndex = this.compareFn(target, this.entries[mid]);\n\n            if (pIndex >= 0 && cIndex <= 0) {\n                return mid;\n            } else if (pIndex < 0) {\n                hig = mid - 1;\n            } else if (pIndex > 0) {\n                low = mid + 1;\n            } else {\n                if (DEBUG) {\n                    console.error(\"Cannot find insertion index in an unordered array\");\n                }\n                break;\n            }\n        }\n\n        return -1;\n    }\n\n    bInsert(target: T, offset: number = 0): number {\n        let index = -1;\n        let sIndex = -1,\n            mIndex = -1,\n            eIndex = -1;\n\n        if (offset) {\n            [sIndex, mIndex, eIndex] = this.findInsertionIndex(target);\n        } else {\n            sIndex = mIndex = eIndex = this.bSearchInsertionIndex(target);\n        }\n\n        switch (true) {\n            case offset < 0:\n                index = sIndex;\n                break;\n            case offset > 0:\n                index = eIndex;\n                break;\n            default:\n                index = mIndex;\n                break;\n        }\n\n        if (index > -1) {\n            this.entries.splice(index, 0, target);\n        }\n\n        return this.entries.length;\n    }\n\n    bRemove(target: T): T[] {\n        const eliminated: T[] = [];\n        const index = this.bSearchTargetIndex(target);\n\n        if (index > -1) {\n            eliminated.push(...this.entries.splice(index, 1));\n        }\n\n        return eliminated;\n    }\n\n    bInsertAll(items: T[], offset: number = 0): number {\n        items.forEach((item: T) => {\n            this.bInsert(item, offset);\n        });\n\n        return this.entries.length;\n    }\n\n    bRemoveAll(items: T[]): T[] {\n        const eliminated: T[] = [];\n\n        items.forEach((item: T) => {\n            eliminated.push(...this.bRemove(item));\n        });\n\n        return eliminated;\n    }\n\n    findInsertionIndex(target: T): [number, number, number] {\n        let mIndex = this.bSearchInsertionIndex(target);\n        let sIndex = mIndex;\n        let eIndex = mIndex;\n\n        if (mIndex < 0) return [sIndex, mIndex, eIndex];\n\n        while (eIndex + 1 < this.entries.length) {\n            const pIndex = this.compareFn(target, this.entries[eIndex]);\n            const cIndex = this.compareFn(target, this.entries[eIndex + 1]);\n\n            if (pIndex >= 0 && cIndex <= 0) {\n                eIndex += 1;\n            } else {\n                break;\n            }\n        }\n\n        if (eIndex + 1 === this.entries.length && this.compareFn(target, this.entries[this.entries.length - 1]) >= 0) {\n            eIndex = this.entries.length;\n        }\n\n        while (sIndex - 1 > 0 && sIndex - 1 < this.entries.length) {\n            const pIndex = this.compareFn(target, this.entries[sIndex - 2]);\n            const cIndex = this.compareFn(target, this.entries[sIndex - 1]);\n\n            if (pIndex >= 0 && cIndex <= 0) {\n                sIndex -= 1;\n            } else {\n                break;\n            }\n        }\n\n        if (sIndex === 1 && this.compareFn(target, this.entries[0]) <= 0) {\n            sIndex = 0;\n        }\n\n        return [sIndex, mIndex, eIndex];\n    }\n\n    findTargetIndex(target: T): [number, number, number] {\n        let mIndex = this.bSearchTargetIndex(target);\n        let sIndex = mIndex;\n        let eIndex = mIndex;\n\n        if (mIndex < 0) return [sIndex, mIndex, eIndex];\n\n        while (eIndex + 1 < this.entries.length) {\n            if (this.compareFn(target, this.entries[eIndex + 1])) {\n                break;\n            } else {\n                eIndex += 1;\n            }\n        }\n\n        while (sIndex - 1 >= 0 && sIndex - 1 < this.entries.length) {\n            if (this.compareFn(target, this.entries[sIndex - 1])) {\n                break;\n            } else {\n                sIndex -= 1;\n            }\n        }\n\n        return [sIndex, mIndex, eIndex];\n    }\n\n    removeAllEquivalent(items: T[], interrupt: boolean = false): T[] {\n        const eliminated: T[] = [];\n        const indexCounter: { [index: string]: number } = {};\n\n        for (const item of items) {\n            const [sIndex, mIndex, eIndex] = this.findTargetIndex(item);\n\n            if (mIndex < 0) continue;\n\n            for (let i = sIndex; i < eIndex + 1; i++) {\n                if (this.entries[i] === item) {\n                    if (indexCounter[i] == null) {\n                        indexCounter[i] = 1;\n                    } else {\n                        indexCounter[i]++;\n                    }\n                    if (interrupt) break;\n                }\n            }\n        }\n\n        Object.keys(indexCounter)\n            .map(Number)\n            .sort((a, b) => b - a)\n            .forEach(val => {\n                eliminated.push(...this.entries.splice(val, 1));\n            });\n\n        if (DEBUG) {\n            const diff = items.length - eliminated.length;\n            if (diff) {\n                console.warn(`${diff} items cannot be removed, which may cause performance problems`);\n            }\n        }\n\n        return eliminated;\n    }\n\n    getItemsByPartialRange(start: Partial<T>, end: Partial<T>, limit: number = Infinity): T[] {\n        const [sIndex] = this.findInsertionIndex(<T>start);\n        const [eIndex] = this.findInsertionIndex(<T>end);\n\n        return this.getItemsByIndexRange(sIndex, eIndex, limit);\n    }\n\n    /**\n     * @desc Include start index and exclude end index.\n     * @desc Returned value is a subarray(a sorted array) of `entries`.\n     */\n    getItemsByIndexRange(sIndex: number, eIndex: number, limit: number = Infinity): T[] {\n        const data: T[] = [];\n\n        if (sIndex >= eIndex) return data;\n\n        while (sIndex < eIndex) {\n            if (sIndex >= 0 && sIndex < this.entries.length) {\n                if (data.length >= limit) break;\n                data.push(this.entries[sIndex]);\n            }\n            sIndex++;\n        }\n\n        return data;\n    }\n}\n","import { IDanmakuConfig } from \"../danmaku\";\nimport { IDanmakuItem } from \"../sharre/parser\";\nimport { Utils } from \"../sharre/utils\";\nimport { BaseEntity } from \"../entity/base-entity\";\nimport { DanmakuMode, DEF_LINE_HEIGHT } from \"../sharre/constant\";\nimport { BinaryTree } from \"../sharre/binary-tree\";\n\ninterface ILayoutMode<U> {\n    [DanmakuMode.RightToLeft]: BinaryTree<U>[];\n    [DanmakuMode.LeftToRight]: BinaryTree<U>[];\n    [DanmakuMode.TopToBottom]: BinaryTree<U>[];\n    [DanmakuMode.BottomToTop]: BinaryTree<U>[];\n}\n\nexport abstract class BaseRenderer<T extends BaseEntity> {\n    readonly domElement = document.createElement(\"div\");\n\n    private timelineRaf = 0;\n    private maxStackDepth = 0;\n    private prevFrameTimeStamp: DOMHighResTimeStamp = 0;\n    protected readonly fpsSamples: number[] = [];\n    protected readonly fpsMaxSamples = 5;\n    protected readonly stackDepthRestrict = 2 * 1024;\n    protected readonly compositeFrameInterval = 40; // Unit: ms\n    protected readonly compositeFrameMinPeriod = 5; // Unit: ms\n    protected readonly viewportTree = new BinaryTree<T>((prev, next) => prev.item.start - next.item.start);\n    protected readonly timelineTree = new BinaryTree<IDanmakuItem>(Utils.danmakuCompareFn);\n    protected readonly sharedCanvas = document.createElement(\"canvas\");\n    protected readonly state = {\n        paused: true,\n        currentTime: 0,\n    };\n    protected readonly zIndexLayout: ILayoutMode<T> = {\n        [DanmakuMode.RightToLeft]: [],\n        [DanmakuMode.LeftToRight]: [],\n        [DanmakuMode.TopToBottom]: [],\n        [DanmakuMode.BottomToTop]: [],\n    };\n\n    get fps() {\n        if (this.fpsSamples.length) {\n            const samples = this.fpsSamples.slice(-this.fpsMaxSamples);\n            const total = samples.reduce((prev, cur) => prev + cur, 0);\n\n            if (samples.length > 2) {\n                return (samples.length - 2) / (total - Math.max(...samples) - Math.min(...samples));\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    get paused() {\n        return this.state.paused;\n    }\n\n    get currentTime() {\n        return this.state.currentTime;\n    }\n\n    protected constructor(readonly config: IDanmakuConfig) {\n        this.genMaxStackDepth();\n        this.genStageDetail();\n    }\n\n    protected abstract render(prevTime: number, currentTime: number): void;\n    protected abstract cleanOutdatedEntities(removedEntities: T[]): void;\n\n    protected getItemsByTimeRange(prevTime: number, currentTime: number): IDanmakuItem[] {\n        return this.timelineTree\n            .getItemsByPartialRange({ start: prevTime }, { start: currentTime })\n            .filter(item => this.config.filter.call(null, item));\n    }\n\n    protected compositeAll(entities: T[], compositeFramePeriodRestrict: number = Infinity): T[] {\n        const compositedEntities: T[] = [];\n\n        if (!entities.length) return compositedEntities;\n\n        const groups: (T[] | void)[] = []; // Sparse Array\n        const step = this.compositeFrameInterval / 1000;\n        const bStart = Math.min(...entities.map(entity => entity.item.start));\n\n        entities.forEach(entity => {\n            const j = Math.floor((entity.item.start - bStart) / step);\n            const g = groups[j];\n            if (Array.isArray(g)) {\n                g.push(entity);\n            } else {\n                groups[j] = [entity];\n            }\n        });\n\n        groups.forEach(group => {\n            if (group && group.length) {\n                compositedEntities.push(...this.composite(group, compositeFramePeriodRestrict));\n            }\n        });\n\n        return compositedEntities;\n    }\n\n    protected composite(entities: T[], compositeFramePeriodRestrict: number = Infinity): T[] {\n        const maxPeriod = Math.max(this.compositeFrameMinPeriod, compositeFramePeriodRestrict) || Infinity;\n        const compositedEntities: T[] = [];\n        const prevLayoutDetailCache: { [P in keyof ILayoutMode<T>]?: [number, number] } = {}; // [offsetY, zIndex]\n\n        const startTime = performance.now();\n        for (const entity of entities) {\n            let j = 0;\n            let args: void | [T, number, number] = [entity, 0, 0];\n\n            if (prevLayoutDetailCache[entity.item.mode]) {\n                const [offsetYCache, zIndexCache] = prevLayoutDetailCache[entity.item.mode];\n                args = [entity, offsetYCache, zIndexCache];\n            }\n\n            while (args && j++ < this.maxStackDepth) {\n                args = this.getNextCompositeArguments(...args);\n            }\n\n            if (entity.composited) {\n                compositedEntities.push(entity);\n                prevLayoutDetailCache[entity.item.mode] = [entity.offsetY, entity.zIndex];\n            }\n\n            if (performance.now() - startTime > maxPeriod) break;\n        }\n        const etime = performance.now();\n\n        this.viewportTree.bInsertAll(compositedEntities);\n\n        if (DEBUG) {\n            if (compositedEntities.length !== entities.length) {\n                console.warn(`${entities.length - compositedEntities.length} entities have been discarded`);\n            }\n            if (etime - startTime > 5) {\n                console.warn(`Composition time is ${etime - startTime}ms which greater than 5ms`);\n            }\n        }\n\n        return compositedEntities;\n    }\n\n    private getNextCompositeArguments(entity: T, offsetY: number, zIndex: number): void | [T, number, number] {\n        /** The highlight danmaku has an extra layer. */\n        const calculatedOpenLayers = this.config.openLayers + (entity.item.highlight ? 1 : 0);\n\n        if (entity.composited) return;\n        if (zIndex && zIndex > calculatedOpenLayers) return;\n        if (entity.y + entity.height > this.config.canvasH) return;\n\n        if (offsetY + entity.y < 0 || offsetY + entity.y + entity.height > this.config.canvasH) {\n            return [entity, 0, zIndex + 1];\n        }\n\n        const list: BinaryTree<T>[] = this.zIndexLayout[entity.item.mode];\n\n        if (!Array.isArray(list)) return;\n\n        while (list.length <= zIndex) {\n            list.push(new BinaryTree<T>((prev, next) => prev.y - next.y));\n        }\n\n        const layoutTree: BinaryTree<T> = list[zIndex];\n        const tunedOffsetY = this.getTunedOffsetY(entity, offsetY, zIndex);\n\n        if (tunedOffsetY) {\n            return [entity, tunedOffsetY, zIndex];\n        } else {\n            entity.setLayout(offsetY, zIndex);\n            layoutTree.bInsert(entity);\n        }\n    }\n\n    private getTunedOffsetY(entity: T, offsetY: number, zIndex: number): number {\n        const list: BinaryTree<T>[] = this.zIndexLayout[entity.item.mode];\n        const layoutTree: BinaryTree<T> = list[zIndex];\n        const [sIndex] = layoutTree.findInsertionIndex(<T>{ y: entity.y + offsetY });\n        const start = sIndex < 0 ? 0 : sIndex;\n\n        for (let i = start; i < layoutTree.entries.length; i++) {\n            const exist = layoutTree.entries[i];\n\n            if (\n                this.isIntersectionRectangle(entity, exist, offsetY) ||\n                this.isExceedingLinearSpeed(entity, exist, offsetY)\n            ) {\n                return exist.y + exist.height + 1;\n            }\n        }\n\n        // for (const exist of layoutTree.entries) {\n        //     if (\n        //         this.isIntersectionRectangle(entity, exist, offsetY) ||\n        //         this.isExceedingLinearSpeed(entity, exist, offsetY)\n        //     ) {\n        //         return exist.y + exist.height + 1;\n        //     }\n        // }\n\n        return 0;\n    }\n\n    private isIntersectionRectangle(target: T, exist: T, offsetY: number): boolean {\n        return Utils.isOrthogonalRectangle(\n            {\n                x: target.x,\n                y: offsetY + target.y,\n                width: target.width,\n                height: target.height,\n            },\n            {\n                x: exist.x,\n                y: exist.y,\n                width: exist.width,\n                height: exist.height,\n            },\n        );\n    }\n\n    private isExceedingLinearSpeed(target: T, exist: T, offsetY: number): boolean {\n        const isRowOrthogonal = Utils.isOrthogonalRectangle(\n            {\n                x: 0,\n                y: offsetY + target.y,\n                width: 64,\n                height: target.height,\n            },\n            {\n                x: 0,\n                y: exist.y,\n                width: 64,\n                height: exist.height,\n            },\n        );\n\n        if (!isRowOrthogonal) return false;\n\n        const diffSpeed = target.averageLinearSpeed - exist.averageLinearSpeed;\n        const diffDistance = Math.min(target.restTime, exist.restTime) * Math.abs(diffSpeed);\n\n        if (diffSpeed > 0) {\n            if (exist.x + exist.width < target.x) {\n                return diffDistance > target.x - (exist.x + exist.width);\n            } else {\n                return !(target.x + target.width < exist.x);\n            }\n        }\n\n        if (diffSpeed < 0) {\n            if (target.x + target.width < exist.x) {\n                return diffDistance > exist.x - (target.x + target.width);\n            } else {\n                return !(exist.x + exist.width < target.x);\n            }\n        }\n\n        return false;\n    }\n\n    private genMaxStackDepth() {\n        /** Two extra layers: default and highlight. */\n        const coBoundary = Math.ceil(this.config.canvasH / 12) * (Math.max(0, this.config.openLayers) + 2);\n        this.maxStackDepth = Math.min(coBoundary, this.stackDepthRestrict) || this.stackDepthRestrict;\n    }\n\n    private genStageDetail() {\n        this.domElement.style.display = \"block\";\n        this.domElement.style.position = \"absolute\";\n        this.domElement.style.top = \"0%\";\n        this.domElement.style.left = \"50%\";\n        this.domElement.style.right = \"0%\";\n        this.domElement.style.bottom = \"0%\";\n        this.domElement.style.overflow = \"hidden\";\n        this.domElement.style.transform = \"translateX(-50%)\";\n        this.domElement.style.whiteSpace = \"pre\";\n        this.domElement.style.pointerEvents = \"none\";\n        this.domElement.style.width = `${this.config.canvasW}px`;\n        this.domElement.style.height = `${this.config.canvasH}px`;\n        this.domElement.style.lineHeight = DEF_LINE_HEIGHT.toString();\n\n        if (this.config.container && !this.domElement.parentElement) {\n            this.config.container.appendChild(this.domElement);\n        }\n    }\n\n    /**\n     * @desc Internal clock\n     */\n    private nextTick(): number {\n        const currentFrameTimeStamp = performance.now();\n        const elapsed = (currentFrameTimeStamp - this.prevFrameTimeStamp) / 1000;\n        const prevTime = this.state.currentTime;\n\n        this.state.currentTime = this.clockSynchronization(prevTime, elapsed);\n        this.prevFrameTimeStamp = currentFrameTimeStamp;\n        this.fpsSamples.push(elapsed);\n\n        while (this.fpsSamples.length > this.fpsMaxSamples) {\n            this.fpsSamples.shift();\n        }\n\n        return elapsed;\n    }\n\n    private clockSynchronization(previousTime: DOMHighResTimeStamp, elapsed: DOMHighResTimeStamp): DOMHighResTimeStamp {\n        const time = +this.config.clock.call(null, previousTime, elapsed) || 0;\n\n        if (time >= 0 && time < Infinity) {\n            return time;\n        } else {\n            return previousTime;\n        }\n    }\n\n    private nextAnimationFrame(timeStamp: DOMHighResTimeStamp) {\n        if (DEBUG) {\n            console.count(\"requestAnimationFrame\");\n        }\n        const previousTime = this.state.currentTime;\n\n        this.nextTick();\n        this.refreshRendererDetail();\n        this.render(previousTime, this.state.currentTime);\n        this.timelineRaf = requestAnimationFrame(this.nextAnimationFrame.bind(this));\n    }\n\n    private refreshRendererDetail() {\n        const delta = 0.05; // Unit: s\n        const outdated: T[] = [];\n\n        for (const entity of this.viewportTree.entries) {\n            if (entity.item.start + entity.duration + delta < this.state.currentTime) {\n                outdated.push(entity);\n            } else {\n                break;\n            }\n        }\n\n        this.removeOutdatedEntitiesFromTrees(outdated);\n    }\n\n    private removeOutdatedEntitiesFromTrees(outdated: T[]) {\n        if (outdated.length) {\n            outdated.forEach(entity => {\n                const list: BinaryTree<T>[] = this.zIndexLayout[entity.item.mode];\n                if (list && list[entity.zIndex]) {\n                    list[entity.zIndex].removeAllEquivalent([entity], true);\n                }\n            });\n\n            const removedEntities = this.viewportTree.removeAllEquivalent(outdated, true);\n\n            this.cleanOutdatedEntities(removedEntities);\n\n            if (!this.config.reproducible) {\n                const items = outdated.map(entity => entity.item);\n                this.timelineTree.removeAllEquivalent(items, true);\n            }\n        }\n    }\n\n    private requestDanmakuAnimation() {\n        if (!this.timelineRaf) {\n            this.prevFrameTimeStamp = this.prevFrameTimeStamp || performance.now();\n            this.timelineRaf = requestAnimationFrame(this.nextAnimationFrame.bind(this));\n            this.state.paused = false;\n        }\n    }\n\n    private cancelDanmakuAnimation() {\n        if (this.timelineRaf) {\n            cancelAnimationFrame(this.timelineRaf);\n            this.nextTick();\n            this.prevFrameTimeStamp = 0;\n            this.timelineRaf = 0;\n            this.state.paused = true;\n        }\n    }\n\n    private refreshViewportTree(currentTime: number) {\n        const [sIndex] = this.timelineTree.findInsertionIndex(<IDanmakuItem>{ start: currentTime });\n\n        if (sIndex > 0) {\n            let prevTime = null;\n\n            for (let i = sIndex - 1; i >= 0; i--) {\n                const item = this.timelineTree.entries[i];\n                if (item.start < currentTime && item.start + this.config.duration >= currentTime) {\n                    prevTime = item.start;\n                } else {\n                    break;\n                }\n            }\n\n            if (prevTime != null) {\n                this.render(prevTime, currentTime);\n                this.viewportTree.entries.forEach(entity => entity.repaintFrame());\n            }\n        }\n    }\n\n    play() {\n        if (!this.timelineRaf) {\n            this.requestDanmakuAnimation();\n        }\n    }\n\n    pause() {\n        if (this.timelineRaf) {\n            this.cancelDanmakuAnimation();\n        }\n    }\n\n    /**\n     * @desc MUST not be use this method if you are using external clock.\n     */\n    seek(to: number, refreshViewport?: boolean) {\n        const time = Number(to);\n        const prevPaused = this.paused;\n\n        if (time !== this.currentTime && time >= 0 && time < Infinity && !isNaN(time)) {\n            this.pause();\n            this.removeOutdatedEntitiesFromTrees(this.viewportTree.entries.slice(0));\n            this.state.currentTime = time;\n            if (refreshViewport) {\n                this.refreshViewportTree(time);\n            }\n            prevPaused ? this.pause() : this.play();\n        }\n    }\n\n    addAll(items: IDanmakuItem[]) {\n        this.timelineTree.bInsertAll(items);\n    }\n\n    resize(w: number, h: number) {\n        if (w > 0 || h > 0) {\n            const oldCanvasW = this.config.canvasW;\n\n            if (w) {\n                this.config.canvasW = w;\n                if (this.config.scalableDuration) {\n                    this.config.duration = (w / oldCanvasW) * this.config.duration;\n                }\n            }\n            if (h) {\n                this.config.canvasH = h;\n            }\n            this.genMaxStackDepth();\n            this.genStageDetail();\n            this.viewportTree.entries.forEach(entity => entity.resize());\n        }\n    }\n\n    search(offsetX: number, offsetY: number): T[] {\n        return this.viewportTree.entries.filter(entity => {\n            return Utils.isOrthogonalRectangle(\n                {\n                    x: offsetX,\n                    y: offsetY,\n                    width: 0,\n                    height: 0,\n                },\n                {\n                    x: entity.x,\n                    y: entity.y,\n                    width: entity.width,\n                    height: entity.height,\n                },\n            );\n        });\n    }\n\n    dispose() {\n        this.cancelDanmakuAnimation();\n\n        if (this.domElement.parentElement) {\n            this.domElement.parentElement.removeChild(this.domElement);\n        }\n    }\n}\n","import { BaseEntity } from \"./base-entity\";\nimport { IDanmakuItem } from \"../sharre/parser\";\nimport { Utils } from \"../sharre/utils\";\nimport { BaseRenderer } from \"../renderer/base-renderer\";\nimport { DanmakuMode, DEF_OUTLINE_COLOR } from \"../sharre/constant\";\n\nexport class CssEntity extends BaseEntity {\n    private readonly keyframeName: string;\n\n    constructor(\n        renderer: BaseRenderer<CssEntity>,\n        item: IDanmakuItem,\n        sharedCanvas: HTMLCanvasElement,\n        readonly sharedStyle: HTMLStyleElement,\n        readonly node: HTMLSpanElement = document.createElement(\"span\"),\n    ) {\n        super(renderer, item, sharedCanvas);\n        this.keyframeName = `${this.config.prefix}_keyframe-${this.item.uuid}`;\n    }\n\n    genTextNodeDetail(): void {\n        if (this.composited) {\n            this.recalculateStyleReducer(true);\n            this.insertKeyframes();\n            this.node.style.left = \"\";\n            this.node.style.top = \"\";\n            this.node.style.right = \"\";\n            this.node.style.bottom = \"\";\n            this.node.style.outline = \"\";\n\n            switch (this.item.mode) {\n                case DanmakuMode.TopToBottom:\n                    this.node.style.top = `${this.initialY}px`;\n                    this.node.style.left = \"50%\";\n                    this.node.style.transform = \"translateX(-50%)\";\n                    break;\n                case DanmakuMode.BottomToTop:\n                    this.node.style.bottom = `${this.initialY}px`;\n                    this.node.style.left = \"50%\";\n                    this.node.style.transform = \"translateX(-50%)\";\n                    break;\n                case DanmakuMode.LeftToRight:\n                    this.node.style.top = `${this.initialY}px`;\n                    this.node.style.right = `calc(100% + ${this.offsetX}px)`;\n                    this.node.style.transform = \"translateX(0px)\";\n                    break;\n                case DanmakuMode.RightToLeft:\n                default:\n                    this.node.style.top = `${this.initialY}px`;\n                    this.node.style.left = `calc(100% + ${this.offsetX}px)`;\n                    this.node.style.transform = \"translateX(0px)\";\n                    break;\n            }\n\n            if (this.item.highlight) {\n                this.node.style.outline = `1px solid ${Utils.getHexColor(DEF_OUTLINE_COLOR)}`;\n            }\n\n            this.node.style.fontFamily = this.config.fontFamily;\n            this.node.style.fontWeight = this.config.fontWeight;\n            this.node.textContent = this.item.content;\n            this.node.style.position = \"absolute\";\n            this.node.style.fontSize = `${this.fontSize}px`;\n            this.node.style.color = Utils.getHexColor(this.item.color);\n            this.node.style.userSelect = \"none\";\n            this.node.style.textShadow = `1px 0px 1px ${this.strokeColor}, \n                                          0px 1px 1px ${this.strokeColor},\n                                          0px -1px 1px ${this.strokeColor}, \n                                          -1px 0px 1px ${this.strokeColor}`;\n            this.node.style.zIndex = this.zIndex.toString();\n            this.node.setAttribute(\"data-uuid\", this.item.uuid);\n            this.node.setAttribute(\"data-mode\", this.item.mode.toString());\n            this.node.style.animation = `${this.keyframeName} ${this.duration}s linear 0s 1 normal forwards`;\n            this.node.style.animationPlayState = \"paused\";\n            this.node.style.display = \"inline-block\";\n        }\n    }\n\n    private insertKeyframes() {\n        if (this.sharedStyle.sheet) {\n            const sheet = <CSSStyleSheet>this.sharedStyle.sheet;\n            const index = sheet.cssRules.length;\n\n            switch (this.item.mode) {\n                case DanmakuMode.TopToBottom:\n                case DanmakuMode.BottomToTop:\n                    break;\n                case DanmakuMode.LeftToRight:\n                    sheet.insertRule(\n                        `\n                        @keyframes ${this.keyframeName} {\n                            from {\n                                transform: translateX(0px);\n                            }\n                            to {\n                                transform: translateX(${this.totalMotionDistance}px);\n                            }\n                        }\n                    `,\n                        index,\n                    );\n                    break;\n                case DanmakuMode.RightToLeft:\n                default:\n                    sheet.insertRule(\n                        `\n                        @keyframes ${this.keyframeName} {\n                            from {\n                                transform: translateX(0px);\n                            }\n                            to {\n                                transform: translateX(-${this.totalMotionDistance}px);\n                            }\n                        }\n                    `,\n                        index,\n                    );\n                    break;\n            }\n        }\n    }\n\n    private deleteKeyframes(endOffset: number = 0) {\n        if (this.sharedStyle.sheet) {\n            const sheet = <CSSStyleSheet>this.sharedStyle.sheet;\n            const length = Math.min(sheet.cssRules.length + endOffset, sheet.cssRules.length);\n\n            for (let i = 0; i < length; i++) {\n                const rule = <CSSKeyframesRule>sheet.cssRules[i];\n                if (rule.type === CSSRule.KEYFRAMES_RULE && rule.name === this.keyframeName) {\n                    sheet.deleteRule(i);\n                    break;\n                }\n            }\n        }\n    }\n\n    private recalculateStyleReducer(val: boolean) {\n        switch (this.item.mode) {\n            case DanmakuMode.TopToBottom:\n            case DanmakuMode.BottomToTop:\n                break;\n            case DanmakuMode.LeftToRight:\n            case DanmakuMode.RightToLeft:\n            default:\n                this.node.style.willChange = val ? \"transform\" : \"\";\n                break;\n        }\n    }\n\n    private refreshVisibilityStyle(visible: boolean): void {\n        this.state.visible = visible;\n        this.node.style.visibility = this.state.visible ? \"\" : \"hidden\";\n    }\n\n    show(): void {\n        this.refreshVisibilityStyle(true);\n    }\n\n    hide(): void {\n        this.refreshVisibilityStyle(false);\n    }\n\n    play(): void {\n        super.play();\n        this.node.style.animationPlayState = \"running\";\n    }\n\n    pause(): void {\n        super.pause();\n        this.node.style.animationPlayState = \"paused\";\n    }\n\n    resize(): void {\n        this.insertKeyframes();\n        this.deleteKeyframes(-1);\n        this.node.style.animationDuration = `${this.duration}s`;\n    }\n\n    repaintFrame(): void {\n        this.node.style.animationDelay = `-${this.elapsedTime}s`;\n    }\n\n    dispose(needRemove?: boolean) {\n        if (needRemove) {\n            if (this.node.parentElement) {\n                this.node.parentElement.removeChild(this.node);\n            }\n        } else {\n            this.node.style.display = \"none\";\n            this.recalculateStyleReducer(false);\n        }\n        this.deleteKeyframes();\n    }\n}\n","import { IDanmakuConfig } from \"../danmaku\";\nimport { IDanmakuItem } from \"../sharre/parser\";\nimport { Utils } from \"../sharre/utils\";\nimport { DanmakuMode, DEF_LINE_HEIGHT } from \"../sharre/constant\";\nimport { BaseRenderer } from \"../renderer/base-renderer\";\nimport { CssEntity } from \"./css-entity\";\n\nexport abstract class BaseEntity {\n    readonly width: number;\n    readonly height: number;\n    readonly config: IDanmakuConfig;\n    readonly strokeColor: string;\n\n    protected readonly state = {\n        zIndex: 0,\n        offsetX: 1,\n        offsetY: 0,\n        paused: true,\n        visible: true,\n        composited: false,\n    };\n\n    /**\n     * @desc NOTICE: This state MUST be in sync with renderer's paused state,\n     *       otherwise the animation will be deranged.\n     */\n    get paused() {\n        return this.state.paused;\n    }\n\n    get composited() {\n        return this.state.composited;\n    }\n\n    get visible() {\n        return this.state.visible;\n    }\n\n    get zIndex(): number {\n        return this.state.zIndex;\n    }\n\n    get fontSize(): number {\n        return Math.floor(this.item.size * this.config.fontScaling);\n    }\n\n    get elapsedTime(): number {\n        const elapsedTime = this.renderer.currentTime - this.item.start;\n        return Math.min(Math.max(0, elapsedTime), this.duration);\n    }\n\n    get restTime(): number {\n        const restTime = this.duration - this.elapsedTime;\n        return Math.min(Math.max(0, restTime), this.duration);\n    }\n\n    get duration(): number {\n        return this.config.duration;\n    }\n\n    get totalMotionDistance(): number {\n        return this.config.canvasW + this.width + this.state.offsetX;\n    }\n\n    get elapsedMotionDistance(): number {\n        return (this.elapsedTime / this.duration) * this.totalMotionDistance;\n    }\n\n    get restMotionDistance(): number {\n        return (this.restTime / this.duration) * this.totalMotionDistance;\n    }\n\n    get averageLinearSpeed(): number {\n        return this.totalMotionDistance / this.duration;\n    }\n\n    get x(): number {\n        switch (this.item.mode) {\n            case DanmakuMode.TopToBottom:\n            case DanmakuMode.BottomToTop:\n                return (this.config.canvasW - this.width) / 2;\n            case DanmakuMode.LeftToRight:\n            case DanmakuMode.RightToLeft:\n            default:\n                return this.restMotionDistance - this.width;\n        }\n    }\n\n    get y(): number {\n        return this.state.offsetY;\n    }\n\n    get offsetX(): number {\n        return this.state.offsetX;\n    }\n\n    get offsetY(): number {\n        return this.state.offsetY;\n    }\n\n    get initialX(): number {\n        switch (this.item.mode) {\n            case DanmakuMode.TopToBottom:\n            case DanmakuMode.BottomToTop:\n                return (this.config.canvasW - this.width) / 2;\n            case DanmakuMode.LeftToRight:\n            case DanmakuMode.RightToLeft:\n            default:\n                return this.config.canvasW + this.state.offsetX;\n        }\n    }\n\n    get initialY(): number {\n        return this.state.offsetY;\n    }\n\n    protected constructor(\n        readonly renderer: BaseRenderer<CssEntity>,\n        readonly item: IDanmakuItem,\n        readonly sharedCanvas: HTMLCanvasElement,\n    ) {\n        this.config = this.renderer.config;\n        this.strokeColor = Utils.getHexColor(Utils.getOutlineColor(this.item.color));\n        this.width = Utils.getMeasuredTextWidth(\n            this.sharedCanvas,\n            item.content,\n            `${this.config.fontWeight} ${this.fontSize}px/${DEF_LINE_HEIGHT} ${this.config.fontFamily}`,\n        );\n        this.height =\n            Utils.getMeasuredTextWidth(\n                this.sharedCanvas,\n                \"中\",\n                `${this.config.fontWeight} ${this.fontSize}px/${DEF_LINE_HEIGHT} ${this.config.fontFamily}`,\n            ) * DEF_LINE_HEIGHT;\n    }\n\n    abstract hide(): void;\n    abstract show(): void;\n    abstract resize(): void;\n    abstract repaintFrame(): void;\n    abstract dispose(): void;\n    abstract genTextNodeDetail(): void;\n\n    play() {\n        this.state.paused = false;\n    }\n\n    pause() {\n        this.state.paused = true;\n    }\n\n    setLayout(offsetY: number, zIndex: number): boolean {\n        if (this.state.composited) {\n            return false;\n        } else {\n            this.state.offsetY = offsetY;\n            this.state.zIndex = zIndex;\n            this.state.composited = true;\n            this.genTextNodeDetail();\n            return true;\n        }\n    }\n}\n","import { IDanmakuConfig } from \"../danmaku\";\nimport { BaseRenderer } from \"./base-renderer\";\nimport { CssEntity } from \"../entity/css-entity\";\n\nexport class CssRenderer extends BaseRenderer<CssEntity> {\n    readonly fragment = document.createDocumentFragment();\n    readonly sharedStyle = document.createElement(\"style\");\n    readonly recycledNodes: HTMLSpanElement[] = [];\n\n    constructor(config: IDanmakuConfig) {\n        super(config);\n        this.appendSharedStyle();\n    }\n\n    private appendSharedStyle() {\n        this.sharedStyle.setAttribute(\"data-sign\", `${this.config.prefix}-keyframes`);\n        this.sharedStyle.title = \"This is a shared style for danmaku keyframes\";\n        if (this.domElement.ownerDocument && this.domElement.ownerDocument.head && !this.sharedStyle.parentElement) {\n            this.domElement.ownerDocument.head.appendChild(this.sharedStyle);\n        }\n    }\n\n    protected render(prevTime: number, currentTime: number) {\n        const items = this.getItemsByTimeRange(prevTime, currentTime);\n        const entities = items.map(items => {\n            return new CssEntity(this, items, this.sharedCanvas, this.sharedStyle, this.recycledNodes.shift());\n        });\n        const compositedEntities = this.compositeAll(entities);\n\n        if (compositedEntities.length) {\n            compositedEntities.forEach(compositedEntity => {\n                if (!compositedEntity.node.parentElement) {\n                    this.fragment.appendChild(compositedEntity.node);\n                }\n            });\n\n            if (this.fragment.childNodes.length) {\n                this.domElement.appendChild(this.fragment);\n            }\n\n            this.refreshConnectedEntityAnimation(compositedEntities);\n        }\n    }\n\n    protected cleanOutdatedEntities(removedEntities: CssEntity[]) {\n        for (const entity of removedEntities) {\n            if (this.recycledNodes.length < this.config.recycledBufferSize) {\n                this.recycledNodes.push(entity.node);\n                entity.dispose();\n            } else {\n                entity.dispose(true);\n            }\n        }\n    }\n\n    private refreshConnectedEntityAnimation(entities?: CssEntity[]) {\n        const curPaused = this.paused;\n        const targetEntities = entities || this.viewportTree.entries;\n        targetEntities.forEach(entity => (curPaused ? entity.pause() : entity.play()));\n    }\n\n    play() {\n        if (this.paused) {\n            super.play();\n            this.refreshConnectedEntityAnimation();\n        }\n    }\n\n    pause() {\n        if (!this.paused) {\n            super.pause();\n            this.refreshConnectedEntityAnimation();\n        }\n    }\n\n    dispose() {\n        super.dispose();\n        this.recycledNodes.length = 0;\n        if (this.sharedStyle.parentElement) {\n            this.sharedStyle.parentElement.removeChild(this.sharedStyle);\n        }\n    }\n}\n","import { IDanmakuItem, IParsedDanmakuDetail, Parser } from \"./sharre/parser\";\nimport { DanmakuMode, RendererType } from \"./sharre/constant\";\nimport { CssRenderer } from \"./renderer/css-renderer\";\nimport { BaseRenderer } from \"./renderer/base-renderer\";\nimport { CssEntity } from \"./entity/css-entity\";\n\ninterface IDanmakuConfigRequired {\n    canvasW: number;\n    canvasH: number;\n    readonly container: HTMLElement;\n}\n\ninterface IDanmakuConfigOptional {\n    duration: number;\n    openLayers: number;\n    prefix: string;\n    fontFamily: string;\n    fontWeight: string;\n    fontScaling: number;\n    reproducible: boolean;\n    scalableDuration: boolean;\n    detail: IParsedDanmakuDetail;\n    rendererType: RendererType;\n    recycledBufferSize: number;\n    /**\n     * @desc This function should be simple and efficient.\n     * @desc You can use HTMLMediaElement clock or custom clock.\n     * @desc NOTICE: you MUST invoke `Danmaku.pause()` method\n     *               if clock stopped(e.g: meida paused, suspend or seeking...),\n     *               otherwise the animation will be deranged.\n     * @example `clock: function() { return HTMLMediaElement.currentTime; }`\n     */\n    readonly clock: (\n        this: null,\n        previousTime: DOMHighResTimeStamp,\n        elapsed: DOMHighResTimeStamp,\n    ) => DOMHighResTimeStamp;\n    readonly filter: (this: null, entry: IDanmakuItem) => boolean;\n}\n\nexport type IDanmakuConfig = IDanmakuConfigRequired & IDanmakuConfigOptional;\n\nexport class Danmaku {\n    static get DEF_CONFIG(): IDanmakuConfigOptional {\n        return {\n            duration: 5,\n            openLayers: 0,\n            prefix: \"danmaku\",\n            fontFamily: \"SimHei, sans-serif\",\n            fontWeight: \"700\",\n            fontScaling: 1,\n            reproducible: true,\n            scalableDuration: true,\n            detail: { maxLimit: 100000 },\n            rendererType: RendererType.CSS,\n            recycledBufferSize: 500,\n            clock: (previousTime, elapsed) => previousTime + elapsed,\n            filter: entry => true,\n        };\n    }\n\n    static get Parser() {\n        return Parser;\n    }\n\n    readonly config: IDanmakuConfig;\n    readonly sharedRenderer: BaseRenderer<CssEntity>;\n\n    get paused() {\n        return this.sharedRenderer.paused;\n    }\n\n    get domElement() {\n        return this.sharedRenderer.domElement;\n    }\n\n    constructor(readonly input: IDanmakuConfigRequired & Partial<IDanmakuConfigOptional>) {\n        this.config = Object.assign(Danmaku.DEF_CONFIG, this.input);\n        this.config.rendererType = RendererType.CSS;\n        this.sharedRenderer = new CssRenderer(this.config);\n\n        if (this.config.detail.items) {\n            this.sharedRenderer.addAll(this.config.detail.items.filter(item => item.mode !== DanmakuMode.Unknown));\n        }\n    }\n\n    play() {\n        this.sharedRenderer.play();\n    }\n\n    pause() {\n        this.sharedRenderer.pause();\n    }\n\n    resize(w: number, h: number) {\n        this.sharedRenderer.resize(w, h);\n    }\n}\n"],"sourceRoot":""}